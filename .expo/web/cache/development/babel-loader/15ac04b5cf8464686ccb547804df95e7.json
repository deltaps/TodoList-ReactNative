{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { getTaskList, createTaskList, deleteTaskList, checkRole } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport TodoLists from \"../components/TodoLists\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nbTasks = _useState6[0],\n      setNbTasks = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      taskListId = _useState10[0],\n      setTaskListId = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      taskListTitle = _useState12[0],\n      setTaskListTitle = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      inputIsLoading = _useState16[0],\n      setInputIsLoading = _useState16[1];\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setNbTasks(data.length);\n      setData(data);\n      checkRole(user, token).then(function (data) {\n        setIdUser(data[0].id);\n        setIsLoading(false);\n      });\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  var addTaskList = function addTaskList() {\n    setInputIsLoading(true);\n    createTaskList(token, user, title).then(function () {\n      getTaskList(user, token).then(function (data) {\n        setNbTasks(data.length);\n        setData(data);\n        setInputIsLoading(false);\n      });\n    });\n  };\n\n  var deleteTaskListFunction = function deleteTaskListFunction(id) {\n    deleteTaskList(token, id).then(function () {\n      getTaskList(user, token).then(function (data) {\n        setNbTasks(data.length);\n        setIsLoading(false);\n        setData(data);\n      });\n    });\n  };\n\n  return taskListId != null ? React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: styles.goBackButton,\n    onPress: function onPress() {\n      setTaskListTitle(null);\n      setTaskListId(null);\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back.png\"),\n    style: {\n      height: 35,\n      width: 35\n    }\n  })), React.createElement(TodoLists, {\n    id: taskListId,\n    title: taskListTitle,\n    idUser: idUser\n  })) : isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#5B8266\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }) : erreur != null ? React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Bienvenue sans la liste des todos\"), React.createElement(Text, null, erreur)) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Bienvenue dans la liste des todos\"), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: [styles.TextInput, {\n      marginLeft: 10\n    }],\n    onChangeText: setTitle,\n    placeholder: \"saisir ici une nouvelle tasklist\",\n    onSubmitEditing: addTaskList,\n    value: title\n  })), React.createElement(Text, {\n    style: {\n      marginBottom: 15\n    }\n  }, \"Vous poss\\xE9dez \", nbTasks, \" tasksLists:\"), React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, {\n        style: styles.todoListView\n      }, React.createElement(TouchableOpacity, {\n        style: styles.todoListBtn,\n        onPress: function onPress() {\n          setTaskListId(item.item.id);\n          setTaskListTitle(item.item.title);\n        }\n      }, React.createElement(Text, null, item.item.title)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteTaskListFunction(item.item.id);\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/trash-can-outline.png\"),\n        style: {\n          height: 24,\n          width: 24\n        }\n      })));\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  todoListView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  inputView: {\n    flexDirection: 'row',\n    backgroundColor: \"#AEF6C7\",\n    borderRadius: 30,\n    width: \"80%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  todoListBtn: {\n    width: \"85%\",\n    borderRadius: 25,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5B8266\"\n  },\n  goBackButton: {\n    marginTop: 30,\n    position: 'absolute',\n    top: 5,\n    left: 5,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","createTaskList","deleteTaskList","checkRole","TokenContext","UsernameContext","TodoLists","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","nbTasks","setNbTasks","title","setTitle","taskListId","setTaskListId","taskListTitle","setTaskListTitle","isLoading","setIsLoading","inputIsLoading","setInputIsLoading","then","length","setIdUser","id","catch","err","message","addTaskList","deleteTaskListFunction","styles","container","goBackButton","require","height","width","idUser","justifyContent","alignItems","flex","marginTop","marginBottom","fontSize","fontWeight","inputView","TextInput","marginLeft","item","todoListView","todoListBtn","StyleSheet","create","flexDirection","backgroundColor","borderRadius","padding","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {\r\n    View,\r\n    Text,\r\n    FlatList,\r\n    TextInput,\r\n    Button,\r\n    Image,\r\n    TouchableOpacity,\r\n    StyleSheet, ActivityIndicator\r\n} from 'react-native'\r\nimport {getTaskList, createTaskList, deleteTaskList, checkRole} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport TodoLists from \"../components/TodoLists\";\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    const [nbTasks,setNbTasks] = useState(null)\r\n    const [title,setTitle] = useState(\"\")\r\n    const [taskListId,setTaskListId] = useState(null)\r\n    const [taskListTitle,setTaskListTitle] = useState(null)\r\n    const [isLoading,setIsLoading] = useState(true)\r\n    const [inputIsLoading,setInputIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setNbTasks(data.length)\r\n                setData(data)\r\n                checkRole(user,token)\r\n                    .then(data => {\r\n                        setIdUser(data[0].id)\r\n                        setIsLoading(false)\r\n                    })\r\n\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    const addTaskList = () => {\r\n        setInputIsLoading(true)\r\n        createTaskList(token,user,title)\r\n            .then( () => {\r\n                getTaskList(user,token)\r\n                    .then(data => {\r\n                        setNbTasks(data.length)\r\n                        setData(data)\r\n                        setInputIsLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const deleteTaskListFunction = (id) => {\r\n        deleteTaskList(token,id)\r\n            .then(() => {\r\n                getTaskList(user,token)\r\n                    .then(data => {\r\n                        setNbTasks(data.length)\r\n                        setIsLoading(false)\r\n                        setData(data)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n        taskListId != null ? (\r\n            <View style={styles.container}>\r\n                <TouchableOpacity\r\n                    style={styles.goBackButton}\r\n                    onPress={() => {\r\n                        setTaskListTitle(null)\r\n                        setTaskListId(null)\r\n                    }}\r\n                >\r\n                    <Image source={require('../assets/back.png')} style={{ height: 35, width: 35 }} />\r\n                </TouchableOpacity>\r\n                <TodoLists id = {taskListId} title = {taskListTitle} idUser={idUser}/>\r\n            </View>\r\n        ) : (\r\n            isLoading ? (\r\n                <ActivityIndicator size=\"large\" color=\"#5B8266\" style={{justifyContent: 'center', alignItems: 'center',flex: 1}}/>\r\n            ) : (\r\n                erreur != null ? (\r\n                    <View style={styles.container}>\r\n                        <Text style={{\r\n                            marginTop: 50,\r\n                            marginBottom:20,\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\"\r\n                        }} >Bienvenue sans la liste des todos</Text>\r\n                        <Text>{erreur}</Text>\r\n                    </View>\r\n                ) : (\r\n                    <View style={styles.container}>\r\n                        <Text style={{\r\n                            marginTop: 50,\r\n                            marginBottom:20,\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\"\r\n                        }}>Bienvenue dans la liste des todos</Text>\r\n\r\n                        <View style={styles.inputView}>\r\n                            <TextInput\r\n                                style={[styles.TextInput,{marginLeft:10}]}\r\n                                onChangeText={setTitle}\r\n                                placeholder='saisir ici une nouvelle tasklist'\r\n                                onSubmitEditing={addTaskList}\r\n                                value={title}\r\n                            />\r\n                        </View>\r\n\r\n                        <Text style={{marginBottom: 15}}>Vous possédez {nbTasks} tasksLists:</Text>\r\n                        <FlatList data={data} renderItem={(item) =>\r\n                            <View style={styles.todoListView}>\r\n                                <TouchableOpacity\r\n                                    style={styles.todoListBtn}\r\n                                    onPress={() => {\r\n                                        setTaskListId(item.item.id)\r\n                                        setTaskListTitle(item.item.title)\r\n                                    }}\r\n                                >\r\n                                    <Text>\r\n                                        {item.item.title}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress={() => deleteTaskListFunction(item.item.id)}>\r\n                                    <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n                                </TouchableOpacity>\r\n                            </View>}>\r\n                        </FlatList>\r\n                    </View>\r\n                )\r\n            )\r\n        )\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    todoListView :{\r\n        flexDirection:'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom:15,\r\n    },\r\n\r\n    inputView: {\r\n        flexDirection: 'row',\r\n        backgroundColor: \"#AEF6C7\",\r\n        borderRadius: 30,\r\n        width: \"80%\",\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    TextInput: {\r\n        height: 50,\r\n        flex: 1,\r\n        padding: 10,\r\n        width: \"80%\",\r\n        alignItems:\"center\",\r\n    },\r\n\r\n    todoListBtn: {\r\n        width: \"85%\",\r\n        borderRadius: 25,\r\n        height: 35,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#5B8266\",\r\n    },\r\n\r\n    goBackButton:{\r\n        marginTop:30,\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 5,\r\n        right: 0,\r\n        bottom: 0,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}