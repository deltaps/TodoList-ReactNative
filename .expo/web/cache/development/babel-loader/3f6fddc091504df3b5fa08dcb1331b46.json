{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TokenContext, UsernameContext, RoleContext } from \"../Context/Context\";\nimport { checkRole, signIn } from \"../API/todoAPI\";\nimport { Link } from \"@react-navigation/native\";\nexport default function SignInScreen() {\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      role = _useContext6[0],\n      setRole = _useContext6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      erreur = _useState6[0],\n      setErreur = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \"TodoList\"), React.createElement(Text, null, \"Connexion\"), erreur != null ? React.createElement(Text, null, erreur) : React.createElement(React.Fragment, null), React.createElement(View, null, React.createElement(Text, null, \"Pseudo\"), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Pseudo\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    }\n  })), React.createElement(View, null, React.createElement(Text, null, \"Mot de passe\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    },\n    placeholder: \"Mdp\"\n  })), React.createElement(Button, {\n    title: \"Connexion\",\n    onPress: function onPress() {\n      return signIn(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        checkRole(username, token).then(function (data) {\n          setRole(data[0].roles[0]);\n        }).catch(function (error) {\n          setErreur(error);\n        });\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n      });\n    }\n  }), React.createElement(Text, null, \"Pas encore de compte? \", ' ', React.createElement(Link, {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    to: {\n      screen: 'SignUp'\n    }\n  }, \"Inscrivez-vous!\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputView: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    padding: 10,\n    marginLeft: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","useState","TokenContext","UsernameContext","RoleContext","checkRole","signIn","Link","SignInScreen","token","setToken","user","setUser","role","setRole","username","setUsername","password","setPassword","erreur","setErreur","styles","container","TextInput","data","then","roles","catch","error","props","navigate","err","message","textDecorationLine","screen","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","inputView","borderRadius","width","height","marginBottom","padding","marginLeft"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, Button, TextInput,View,StyleSheet} from 'react-native'\r\nimport {TokenContext, UsernameContext,RoleContext} from \"../Context/Context\";\r\nimport {checkRole, signIn} from \"../API/todoAPI\";\r\nimport {Link} from \"@react-navigation/native\";\r\n\r\nexport default function SignInScreen () {\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [role,setRole] = useContext(RoleContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [erreur,setErreur] = useState(null)\r\n\r\n    return( <View style={styles.container}>\r\n        <Text>\r\n            TodoList\r\n        </Text>\r\n        <Text>\r\n            Connexion\r\n        </Text>\r\n        {erreur != null ? <Text>{erreur}</Text> : <></>}\r\n        <View>\r\n            <Text>Pseudo</Text>\r\n            <TextInput\r\n                style={styles.TextInput}\r\n                placeholder=\"Pseudo\"\r\n                onChangeText={data => setUsername(data)}\r\n            />\r\n        </View>\r\n        <View>\r\n            <Text>Mot de passe</Text>\r\n            <TextInput\r\n                secureTextEntry={true}\r\n                onChangeText={data => setPassword(data)}\r\n                placeholder=\"Mdp\"\r\n            />\r\n        </View>\r\n        <Button\r\n            title=\"Connexion\"\r\n            onPress={() => signIn(username, password)\r\n                .then(token => {\r\n                    setToken(token)\r\n                    setUser(username)\r\n                    checkRole(username,token)\r\n                        .then((data) => {\r\n                            setRole(data[0].roles[0])\r\n                        })\r\n                        .catch((error) => {\r\n                            setErreur(error)\r\n                        })\r\n                    props.navigate('Home')\r\n                })\r\n                .catch(err => {\r\n                    setErreur(err.message)\r\n                })}\r\n        />\r\n        <Text>\r\n            Pas encore de compte? {' '}\r\n            <Link\r\n                style={{ textDecorationLine: 'underline' }}\r\n                to={{ screen: 'SignUp' }}\r\n            >\r\n                Inscrivez-vous!\r\n            </Link>\r\n        </Text>\r\n    </View>)\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputView: {\r\n        backgroundColor: \"#FFC0CB\",\r\n        borderRadius: 30,\r\n        width: \"70%\",\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    TextInput: {\r\n        height: 50,\r\n        padding: 10,\r\n        marginLeft: 20,\r\n    }\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}