{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { getTaskList, signIn } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nbTasks = _useState6[0],\n      setNbTasks = _useState6[1];\n\n  var afficheTask = function afficheTask(data) {\n    for (var i = 0; i < nbTasks; i++) {\n      return React.createElement(View, null, React.createElement(Text, null, \" Titre de la tasks: \", data[0].title), React.createElement(Text, null, \" Id de la tasks: \", data[0].id, \" \"));\n    }\n  };\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setNbTasks(data.length);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, [data]);\n\n  if (erreur != null) {\n    return React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, erreur));\n  } else {\n    return React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, \"Vous poss\\xE9dez \", nbTasks, \" tasksLists\"), afficheTask(data));\n  }\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","signIn","TokenContext","UsernameContext","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","nbTasks","setNbTasks","afficheTask","i","title","id","then","length","catch","err","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;AAEA,SAAQC,WAAR,EAAqBC,MAArB;AACA,SAAQC,YAAR,EAAqBC,eAArB;AAGA,eAAe,SAASC,eAAT,GAA0B;AACrC,oBAAuBP,UAAU,CAACM,eAAD,CAAjC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAyBT,UAAU,CAACK,YAAD,CAAnC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAaC,QAAb;;AACA,kBAA2BT,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAAuBX,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAYC,OAAZ;;AACA,mBAA6Bb,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAeC,UAAf;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACJ,IAAD,EAAU;AAC1B,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,OAAnB,EAA4BG,CAAC,EAA7B,EAAgC;AAC5B,aACI,oBAAC,IAAD,QACI,oBAAC,IAAD,gCAA2BL,IAAI,CAAC,CAAD,CAAJ,CAAQM,KAAnC,CADJ,EAEI,oBAAC,IAAD,6BAAwBN,IAAI,CAAC,CAAD,CAAJ,CAAQO,EAAhC,MAFJ,CADJ;AAMH;AACJ,GATD;;AAWApB,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,WAAW,CAACK,IAAD,EAAME,KAAN,CAAX,CACKY,IADL,CACU,UAAAR,IAAI,EAAI;AACVG,MAAAA,UAAU,CAACH,IAAI,CAACS,MAAN,CAAV;AACH,KAHL,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVZ,MAAAA,SAAS,CAACY,GAAG,CAACC,OAAL,CAAT;AACH,KANL;AAOH,GARQ,EAQP,CAACZ,IAAD,CARO,CAAT;;AAUA,MAAGF,MAAM,IAAI,IAAb,EAAkB;AACd,WACI,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,QAAOA,MAAP,CAFJ,CADJ;AAMH,GAPD,MAQI;AACA,WACI,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,6BAAqBI,OAArB,gBAFJ,EAGKE,WAAW,CAACJ,IAAD,CAHhB,CADJ;AAOH;AAEJ","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport {getTaskList, signIn} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\n\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    const [nbTasks,setNbTasks] = useState(null)\r\n\r\n    const afficheTask = (data) => {\r\n        for(let i = 0; i < nbTasks; i++){\r\n            return (\r\n                <View>\r\n                    <Text> Titre de la tasks: {data[0].title}</Text>\r\n                    <Text> Id de la tasks: {data[0].id} </Text>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setNbTasks(data.length)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[data])\r\n\r\n    if(erreur != null){\r\n        return (\r\n            <View>\r\n                <Text>Bienvenue sans le liste des todos</Text>\r\n                <Text>{erreur}</Text>\r\n            </View>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <View>\r\n                <Text>Bienvenue sans le liste des todos</Text>\r\n                <Text>Vous poss√©dez {nbTasks} tasksLists</Text>\r\n                {afficheTask(data)}\r\n            </View>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}