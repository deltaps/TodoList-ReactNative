{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TodoItem from \"./TodoItem\";\nimport { getTasks, createTask, deleteTask } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoLists(props) {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newTodoText = _useState6[0],\n      setNewTodoText = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      shouldShow = _useState8[0],\n      setShouldShow = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shouldDone = _useState10[0],\n      setShouldDone = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shouldNotDone = _useState12[0],\n      setShouldNotDone = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      erreur = _useState14[0],\n      setErreur = _useState14[1];\n\n  useEffect(function () {\n    getTasks(props.id, token).then(function (data) {\n      setCount(data.filter(function (item) {\n        return item.done;\n      }).length);\n      setTodos(data);\n    }).catch(function (err) {\n      setErreur(err);\n    });\n  }, []);\n\n  var onPressed = function onPressed(offset) {\n    getTasks(props.id, token).then(function (data) {\n      setTodos(data);\n      setCount(data.filter(function (item) {\n        return item.done;\n      }).length);\n    }).catch(function (err) {\n      setErreur(err);\n    });\n  };\n\n  var deleteTodo = function deleteTodo(id) {\n    deleteTask(token, id).then(function () {\n      getTasks(props.id, token).then(function (data) {\n        setTodos(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n      });\n    });\n  };\n\n  var addNewTodo = function addNewTodo() {\n    createTask(newTodoText, token, props.id).then(function () {\n      getTasks(props.id, token).then(function (data) {\n        setTodos(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n      });\n    });\n  };\n\n  var checkAll = function checkAll() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: true\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.length);\n  };\n\n  var checkNone = function checkNone() {\n    setTodos(todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: false\n      };\n    }));\n    setCount(0);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, props.title), React.createElement(Text, {\n    style: {\n      marginBottom: 20\n    }\n  }, \"Il y a \", count, \" slider a true\"), shouldShow ? React.createElement(FlatList, {\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        onPressed: onPressed,\n        item: item,\n        deleteTodo: deleteTodo,\n        beDone: shouldDone,\n        beNotDone: shouldNotDone,\n        id: item.id\n      });\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      setShouldShow(!shouldShow);\n    }\n  }, React.createElement(Text, null, \"Tout afficher/ tout retirer\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return setShouldDone(!shouldDone);\n    }\n  }, React.createElement(Text, null, \"Afficher les t\\xE2che d\\xE9j\\xE0 effectu\\xE9\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return setShouldNotDone(!shouldNotDone);\n    }\n  }, React.createElement(Text, null, \"Afficher les t\\xE2che non effectu\\xE9\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return checkAll();\n    }\n  }, React.createElement(Text, null, \"Cocher toute les t\\xE2ches\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return checkNone();\n    }\n  }, React.createElement(Text, null, \"D\\xE9cocher toute les t\\xE2ches\")), React.createElement(TextInput, {\n    onChangeText: setNewTodoText,\n    placeholder: \"saisir ici un nouvel item\",\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  generalBtn: {\n    width: \"85%\",\n    borderRadius: 25,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5B8266\",\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/components/TodoLists.js"],"names":["React","useContext","useEffect","useState","TodoItem","getTasks","createTask","deleteTask","TokenContext","UsernameContext","TodoLists","props","user","setUser","token","setToken","count","setCount","todos","setTodos","newTodoText","setNewTodoText","shouldShow","setShouldShow","shouldDone","setShouldDone","shouldNotDone","setShouldNotDone","erreur","setErreur","id","then","data","filter","item","done","length","catch","err","onPressed","offset","deleteTodo","addNewTodo","checkAll","newTodos","map","content","checkNone","styles","container","marginTop","marginBottom","fontSize","fontWeight","title","generalBtn","StyleSheet","create","flex","justifyContent","alignItems","width","borderRadius","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {View, TextInput, Button, Text, FlatList, Switch, StyleSheet, TouchableOpacity} from 'react-native';\nimport TodoItem from './TodoItem';\nimport {getTasks, createTask, deleteTask} from \"../API/todoAPI\";\nimport {TokenContext, UsernameContext} from \"../Context/Context\";\n//TODO voir le compteur (marche pas du tout)\nexport default function TodoLists(props){\n    const [user,setUser] = useContext(UsernameContext)\n    const [token,setToken] = useContext(TokenContext)\n    const [count, setCount] = useState(0);\n    const [todos, setTodos] = useState(null);\n    const [newTodoText, setNewTodoText] = useState(\"\");\n    const [shouldShow, setShouldShow] = useState(true);\n    const [shouldDone, setShouldDone] = useState(false);\n    const [shouldNotDone, setShouldNotDone] = useState(false);\n    const [erreur,setErreur] = useState(null);\n\n    useEffect(() => {\n        getTasks(props.id,token)\n            .then(data => {\n                setCount(data.filter((item)=>item.done).length)\n                setTodos(data)\n            })\n            .catch(err => {\n                setErreur(err)\n            })\n    },[])\n\n    const onPressed = (offset) => {\n        getTasks(props.id,token)\n            .then(data => {\n                setTodos(data)\n                setCount(data.filter((item)=>item.done).length)\n            })\n            .catch(err => {\n                setErreur(err)\n            })\n    }\n\n    const deleteTodo = (id) => {\n        deleteTask(token,id)\n            .then(() => {\n                getTasks(props.id,token)\n                    .then(data => {\n                        setTodos(data)\n                        setCount(data.filter((item)=>item.done).length)\n                    })\n            })\n\n    }\n\n    const addNewTodo = () => {\n        createTask(newTodoText,token,props.id)\n            .then(() => {\n                getTasks(props.id,token)\n                    .then(data => {\n                        setTodos(data)\n                        setCount(data.filter((item)=>item.done).length)\n                    })\n            })\n    }\n\n    const checkAll = () => {\n        const newTodos = todos.map(item => {return {id: item.id, content: item.content, done:true}})\n        setTodos(newTodos)\n        setCount(newTodos.length)\n    }\n\n    const checkNone = () => {\n        setTodos(todos.map(item => {return {id: item.id, content: item.content, done:false}}))\n        setCount(0)\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={{\n                marginTop:50,\n                marginBottom:20,\n                fontSize: 20,\n                fontWeight: \"bold\"}}>\n                {props.title}\n            </Text>\n            <Text style={{marginBottom:20}}>Il y a {count} slider a true</Text>\n            {shouldShow ? (\n                <FlatList\n                data={todos}\n                renderItem={({item}) =>\n                    <TodoItem onPressed = {onPressed} item={item} deleteTodo = {deleteTodo} beDone = {shouldDone} beNotDone = {shouldNotDone} id = {item.id}/>\n                }\n                />\n            ) : <></>}\n\n            <TouchableOpacity\n                style={styles.generalBtn}\n                onPress={() => {\n                    setShouldShow(!shouldShow)\n                }}\n            >\n                <Text>\n                    Tout afficher/ tout retirer\n                </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={styles.generalBtn}\n                onPress={() => setShouldDone(!shouldDone)}\n            >\n                <Text>\n                    Afficher les tâche déjà effectué\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.generalBtn}\n                onPress={() => setShouldNotDone(!shouldNotDone)}\n            >\n                <Text>\n                    Afficher les tâche non effectué\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.generalBtn}\n                onPress={() => checkAll()}\n            >\n                <Text>\n                    Cocher toute les tâches\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={styles.generalBtn}\n                onPress={() => checkNone()}\n            >\n                <Text>\n                    Décocher toute les tâches\n                </Text>\n            </TouchableOpacity>\n            <TextInput\n                onChangeText={setNewTodoText}\n                placeholder='saisir ici un nouvel item'\n                onSubmitEditing={addNewTodo}\n                value={newTodoText}\n            />\n        </View>\n    )\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    generalBtn: {\n        width: \"85%\",\n        borderRadius: 25,\n        height: 35,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#5B8266\",\n        marginBottom:5,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}