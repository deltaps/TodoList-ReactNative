{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { signIn } from \"../API/todoAPI\";\nimport { useForm } from \"react-hook-form\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      erreur = _useState6[0],\n      setErreur = _useState6[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, null, \"Connection\"), erreur != null ? React.createElement(Text, null, erreur) : React.createElement(Text, null), React.createElement(Text, null, \"Pseudo:\"), React.createElement(TextInput, {\n    placeholder: \"Pseudo\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    }\n  }), React.createElement(Text, null, \"Mdp:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    },\n    placeholder: \"Mdp\"\n  }), React.createElement(Button, {\n    title: \"Connexion\",\n    onPress: function onPress() {\n      return signIn(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n        console.log(\"Erreur\");\n      });\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","useState","TokenContext","UsernameContext","signIn","useForm","SignInScreen","navigation","token","setToken","user","setUser","username","setUsername","password","setPassword","erreur","setErreur","data","then","props","navigate","catch","err","message","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;;;AAEA,SAAQC,YAAR,EAAqBC,eAArB;;AAEA,SAAQC,MAAR;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,YAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAElD,oBAA0BP,UAAU,CAACE,YAAD,CAApC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,qBAAuBT,UAAU,CAACG,eAAD,CAAjC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAYC,OAAZ;;AACA,kBAA+BV,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA+BZ,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA2Bd,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAcC,SAAd;;AACA,SAAQ,0CACJ,oBAAC,IAAD,qBADI,EAEHD,MAAM,IAAI,IAAV,GAAkB,oBAAC,IAAD,QAAOA,MAAP,CAAlB,GAA4C,oBAAC,IAAD,OAFzC,EAGJ,oBAAC,IAAD,kBAHI,EAIJ,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,YAAY,EAAE,sBAAAE,IAAI;AAAA,aAAIL,WAAW,CAACK,IAAD,CAAf;AAAA;AAFtB,IAJI,EAQJ,oBAAC,IAAD,eARI,EASJ,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE,IADrB;AAEI,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIH,WAAW,CAACG,IAAD,CAAf;AAAA,KAFtB;AAGI,IAAA,WAAW,EAAC;AAHhB,IATI,EAcJ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMd,MAAM,CAACQ,QAAD,EAAWE,QAAX,CAAN,CACVK,IADU,CACL,UAAAX,KAAK,EAAI;AACXC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,OAAO,CAACC,QAAD,CAAP;AACAQ,QAAAA,KAAK,CAACC,QAAN,CAAe,MAAf;AACH,OALU,EAMVC,KANU,CAMJ,UAAAC,GAAG,EAAI;AACVN,QAAAA,SAAS,CAACM,GAAG,CAACC,OAAL,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,OAVU,CAAN;AAAA;AAFb,IAdI,CAAR;AA6BH","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, Button, TextInput} from 'react-native'\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport {SafeAreaView} from \"react-native-web\";\r\nimport {signIn} from \"../API/todoAPI\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function SignInScreen ({ navigation }) {\r\n    //const {setError} = useForm()\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [erreur,setErreur] = useState(null)\r\n    return( <>\r\n        <Text>Connection</Text>\r\n        {erreur != null ? (<Text>{erreur}</Text>) : (<Text></Text>)}\r\n        <Text>Pseudo:</Text>\r\n        <TextInput\r\n            placeholder=\"Pseudo\"\r\n            onChangeText={data => setUsername(data)}\r\n        />\r\n        <Text>Mdp:</Text>\r\n        <TextInput\r\n            secureTextEntry={true}\r\n            onChangeText={data => setPassword(data)}\r\n            placeholder=\"Mdp\"\r\n        />\r\n        <Button\r\n            title=\"Connexion\"\r\n            onPress={() => signIn(username, password)\r\n                .then(token => {\r\n                    setToken(token)\r\n                    setUser(username)\r\n                    props.navigate('Home')\r\n                })\r\n                .catch(err => {\r\n                    setErreur(err.message)\r\n                    console.log(\"Erreur\")\r\n                    //setError(err.message)\r\n                })}\r\n        />\r\n    </>)\r\n}\r\n/*TODO :\r\nsignIn(login, password)\r\n      .then(token => {\r\n        setToken(token)\r\n        setUsername(login)\r\n        props.navigate('Home')\r\n      })\r\n      .catch(err => {\r\n        setError(err.message)\r\n      })\r\n */"]},"metadata":{},"sourceType":"module"}