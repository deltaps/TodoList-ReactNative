{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RoleContext, TokenContext, UsernameContext } from \"../Context/Context\";\nimport { checkRole, signIn } from \"../API/todoAPI\";\nimport { Link } from \"@react-navigation/native\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      autrement = _useContext6[0],\n      setAutrement = _useContext6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      erreur = _useState6[0],\n      setErreur = _useState6[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Connection\"), erreur != null ? React.createElement(Text, null, erreur) : React.createElement(Text, null), React.createElement(Text, null, \"Pseudo:\"), React.createElement(TextInput, {\n    placeholder: \"Pseudo\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    }\n  }), React.createElement(Text, null, \"Mdp:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    },\n    placeholder: \"Mdp\"\n  }), React.createElement(Button, {\n    title: \"Connexion\",\n    onPress: function onPress() {\n      return signIn(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        checkRole(username, token).then(function (data) {\n          console.log(data[0].roles[0]);\n        }).catch(function (error) {\n          setErreur(error);\n        });\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n      });\n    }\n  }), React.createElement(Text, null, \"If you prefer, you can\", ' ', React.createElement(Link, {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    to: {\n      screen: 'SignUp'\n    }\n  }, \"Sign Up\")));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","useState","RoleContext","TokenContext","UsernameContext","checkRole","signIn","Link","SignInScreen","navigation","token","setToken","user","setUser","autrement","setAutrement","username","setUsername","password","setPassword","erreur","setErreur","flex","justifyContent","alignItems","data","then","console","log","roles","catch","error","props","navigate","err","message","textDecorationLine","screen"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;;;;AAEA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,eAAnC;AACA,SAAQC,SAAR,EAAmBC,MAAnB;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AAEA,eAAe,SAASC,YAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAElD,oBAA0BT,UAAU,CAACG,YAAD,CAApC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,qBAAuBX,UAAU,CAACI,eAAD,CAAjC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAiCb,UAAU,CAACE,WAAD,CAA3C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAiBC,YAAjB;;AACA,kBAA+Bd,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA+BhB,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOiB,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA2BlB,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOmB,MAAP;AAAA,MAAcC,SAAd;;AACA,SAAQ,oBAAC,IAAD;AACJ,IAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,cAAc,EAAE,QAFb;AAGHC,MAAAA,UAAU,EAAE;AAHT;AADH,KAOJ,oBAAC,IAAD,qBAPI,EAQHJ,MAAM,IAAI,IAAV,GAAkB,oBAAC,IAAD,QAAOA,MAAP,CAAlB,GAA4C,oBAAC,IAAD,OARzC,EASJ,oBAAC,IAAD,kBATI,EAUJ,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,YAAY,EAAE,sBAAAK,IAAI;AAAA,aAAIR,WAAW,CAACQ,IAAD,CAAf;AAAA;AAFtB,IAVI,EAcJ,oBAAC,IAAD,eAdI,EAeJ,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE,IADrB;AAEI,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIN,WAAW,CAACM,IAAD,CAAf;AAAA,KAFtB;AAGI,IAAA,WAAW,EAAC;AAHhB,IAfI,EAoBJ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMnB,MAAM,CAACU,QAAD,EAAWE,QAAX,CAAN,CACVQ,IADU,CACL,UAAAhB,KAAK,EAAI;AACXC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,OAAO,CAACG,QAAD,CAAP;AACAX,QAAAA,SAAS,CAACW,QAAD,EAAUN,KAAV,CAAT,CACKgB,IADL,CACU,UAACD,IAAD,EAAU;AAEZE,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAAR,CAAc,CAAd,CAAZ;AACH,SAJL,EAKKC,KALL,CAKW,UAACC,KAAD,EAAW;AACdV,UAAAA,SAAS,CAACU,KAAD,CAAT;AACH,SAPL;AAQAC,QAAAA,KAAK,CAACC,QAAN,CAAe,MAAf;AACH,OAbU,EAcVH,KAdU,CAcJ,UAAAI,GAAG,EAAI;AACVb,QAAAA,SAAS,CAACa,GAAG,CAACC,OAAL,CAAT;AACH,OAhBU,CAAN;AAAA;AAFb,IApBI,EAwCJ,oBAAC,IAAD,kCAC2B,GAD3B,EAEI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KADX;AAEI,IAAA,EAAE,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAFR,eAFJ,CAxCI,CAAR;AAkDH","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, Button, TextInput,View} from 'react-native'\r\nimport {RoleContext, TokenContext, UsernameContext} from \"../Context/Context\";\r\nimport {checkRole, signIn} from \"../API/todoAPI\";\r\nimport {Link} from \"@react-navigation/native\";\r\n\r\nexport default function SignInScreen ({ navigation }) {\r\n    //const {setError} = useForm()\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [autrement,setAutrement] = useContext(RoleContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [erreur,setErreur] = useState(null)\r\n    return( <View\r\n        style={{\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}\r\n         >\r\n        <Text>Connection</Text>\r\n        {erreur != null ? (<Text>{erreur}</Text>) : (<Text></Text>)}\r\n        <Text>Pseudo:</Text>\r\n        <TextInput\r\n            placeholder=\"Pseudo\"\r\n            onChangeText={data => setUsername(data)}\r\n        />\r\n        <Text>Mdp:</Text>\r\n        <TextInput\r\n            secureTextEntry={true}\r\n            onChangeText={data => setPassword(data)}\r\n            placeholder=\"Mdp\"\r\n        />\r\n        <Button\r\n            title=\"Connexion\"\r\n            onPress={() => signIn(username, password)\r\n                .then(token => {\r\n                    setToken(token)\r\n                    setUser(username)\r\n                    checkRole(username,token)\r\n                        .then((data) => {\r\n                            //setRole(data[0])\r\n                            console.log(data[0].roles[0])\r\n                        })\r\n                        .catch((error) => {\r\n                            setErreur(error)\r\n                        })\r\n                    props.navigate('Home')\r\n                })\r\n                .catch(err => {\r\n                    setErreur(err.message)\r\n                })}\r\n        />\r\n        <Text>\r\n            If you prefer, you can{' '}\r\n            <Link\r\n                style={{ textDecorationLine: 'underline' }}\r\n                to={{ screen: 'SignUp' }}\r\n            >\r\n                Sign Up\r\n            </Link>\r\n        </Text>\r\n    </View>)\r\n}\r\n/*TODO :\r\nsignIn(login, password)\r\n      .then(token => {\r\n        setToken(token)\r\n        setUsername(login)\r\n        props.navigate('Home')\r\n      })\r\n      .catch(err => {\r\n        setError(err.message)\r\n      })\r\n */"]},"metadata":{},"sourceType":"module"}