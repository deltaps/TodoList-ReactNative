{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TokenContext, UsernameContext, RoleContext } from \"../Context/Context\";\nimport { checkRole, signIn } from \"../API/todoAPI\";\nimport { Link } from \"@react-navigation/native\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      role = _useContext6[0],\n      setRole = _useContext6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      erreur = _useState6[0],\n      setErreur = _useState6[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#fff'\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 40,\n      fontSize: 40,\n      fontWeight: \"bold\"\n    }\n  }, \"TodoList\"), React.createElement(Text, {\n    style: {\n      marginBottom: 10,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Connexion\"), erreur != null ? React.createElement(Text, null, erreur) : React.createElement(Text, null), React.createElement(Text, {\n    style: {\n      marginBottom: 5\n    }\n  }, \"Pseudo\"), React.createElement(View, {\n    styles: {\n      backgroundColor: \"#FFC0CB\",\n      borderRadius: 30,\n      width: \"70%\",\n      height: 45,\n      marginBottom: 20,\n      alignItems: \"center\"\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Pseudo\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    },\n    style: {\n      height: 50,\n      flex: 1,\n      padding: 10,\n      marginBottom: 10\n    }\n  })), React.createElement(Text, {\n    style: {\n      marginBottom: 5\n    }\n  }, \"Mot de passe\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    },\n    placeholder: \"Mdp\",\n    style: {\n      marginBottom: 15\n    }\n  }), React.createElement(Button, {\n    title: \"Connexion\",\n    style: {\n      marginBottom: 20\n    },\n    onPress: function onPress() {\n      return signIn(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        checkRole(username, token).then(function (data) {\n          setRole(data[0].roles[0]);\n        }).catch(function (error) {\n          setErreur(error);\n        });\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n      });\n    }\n  }), React.createElement(Text, null, \"Pas encore de compte? \", ' ', React.createElement(Link, {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    to: {\n      screen: 'SignUp'\n    }\n  }, \"Inscrivez-vous!\")));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","useState","TokenContext","UsernameContext","RoleContext","checkRole","signIn","Link","SignInScreen","navigation","token","setToken","user","setUser","role","setRole","username","setUsername","password","setPassword","erreur","setErreur","flex","justifyContent","alignItems","backgroundColor","marginBottom","fontSize","fontWeight","borderRadius","width","height","data","padding","then","roles","catch","error","props","navigate","err","message","textDecorationLine","screen"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, Button, TextInput,View} from 'react-native'\r\nimport {TokenContext, UsernameContext,RoleContext} from \"../Context/Context\";\r\nimport {checkRole, signIn} from \"../API/todoAPI\";\r\nimport {Link} from \"@react-navigation/native\";\r\n//TODO ROLE\r\nexport default function SignInScreen ({ navigation }) {\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [role,setRole] = useContext(RoleContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [erreur,setErreur] = useState(null)\r\n    return( <View\r\n        style={{\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n        }}\r\n         >\r\n        <Text\r\n            style={{\r\n                marginBottom:40,\r\n                fontSize: 40,\r\n                fontWeight: \"bold\"\r\n            }}\r\n        >\r\n            TodoList\r\n        </Text>\r\n        <Text\r\n            style={{\r\n                marginBottom:10,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\"\r\n            }}\r\n        >\r\n            Connexion\r\n        </Text>\r\n        {erreur != null ? (<Text>{erreur}</Text>) : (<Text></Text>)}\r\n        <Text\r\n            style={{\r\n                marginBottom:5,\r\n            }}\r\n        >\r\n            Pseudo\r\n        </Text>\r\n        <View\r\n            styles={{\r\n                backgroundColor: \"#FFC0CB\",\r\n                borderRadius: 30,\r\n                width: \"70%\",\r\n                height: 45,\r\n                marginBottom: 20,\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <TextInput\r\n                placeholder=\"Pseudo\"\r\n                onChangeText={data => setUsername(data)}\r\n                style={{\r\n                    height: 50,\r\n                    flex: 1,\r\n                    padding: 10,\r\n                    marginBottom:10,\r\n                }}\r\n            />\r\n        </View>\r\n        <Text\r\n            style={{\r\n                marginBottom:5,\r\n            }}\r\n        >\r\n            Mot de passe\r\n        </Text>\r\n        <TextInput\r\n            secureTextEntry={true}\r\n            onChangeText={data => setPassword(data)}\r\n            placeholder=\"Mdp\"\r\n            style={{\r\n                marginBottom:15,\r\n            }}\r\n        />\r\n        <Button\r\n            title=\"Connexion\"\r\n            style={{\r\n                marginBottom:20,\r\n            }}\r\n            onPress={() => signIn(username, password)\r\n                .then(token => {\r\n                    setToken(token)\r\n                    setUser(username)\r\n                    checkRole(username,token)\r\n                        .then((data) => {\r\n                            setRole(data[0].roles[0])\r\n                        })\r\n                        .catch((error) => {\r\n                            setErreur(error)\r\n                        })\r\n                    props.navigate('Home')\r\n                })\r\n                .catch(err => {\r\n                    setErreur(err.message)\r\n                })}\r\n        />\r\n        <Text>\r\n            Pas encore de compte? {' '}\r\n            <Link\r\n                style={{ textDecorationLine: 'underline' }}\r\n                to={{ screen: 'SignUp' }}\r\n            >\r\n                Inscrivez-vous!\r\n            </Link>\r\n        </Text>\r\n    </View>)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}