{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getTaskList, createTaskList, deleteTaskList } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport TodoLists from \"../components/TodoLists\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nbTasks = _useState6[0],\n      setNbTasks = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      taskListId = _useState10[0],\n      setTaskListId = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      taskListTitle = _useState12[0],\n      setTaskListTitle = _useState12[1];\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setNbTasks(data.length);\n      setData(data);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, [data]);\n\n  var addTaskList = function addTaskList() {\n    createTaskList(token, user, title).then(function () {\n      getTaskList(user, token).then(function (data) {\n        setNbTasks(data.length);\n        setData(data);\n      });\n    });\n  };\n\n  var deleteTaskListFunction = function deleteTaskListFunction(id) {\n    deleteTaskList(token, id).then(function () {\n      getTaskList(user, token).then(function (data) {\n        setNbTasks(data.length);\n        setData(data);\n      });\n    });\n  };\n\n  return taskListId != null ? React.createElement(View, null, React.createElement(TouchableOpacity, {\n    style: styles.goBackButton,\n    onPress: function onPress() {\n      setTaskListTitle(null);\n      setTaskListId(null);\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back.png\"),\n    style: {\n      height: 30,\n      width: 30\n    }\n  })), React.createElement(Text, null, \"Titre de la tasksliste: \", taskListTitle), React.createElement(TodoLists, {\n    id: taskListId\n  })) : erreur != null ? React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Bienvenue sans la liste des todos\"), React.createElement(Text, null, erreur)) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Bienvenue dans la liste des todos\"), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    onChangeText: setTitle,\n    placeholder: \"saisir ici une nouvelle tasklist\",\n    onSubmitEditing: addTaskList,\n    value: title\n  })), React.createElement(Text, {\n    style: {\n      marginBottom: 15\n    }\n  }, \"Vous poss\\xE9dez \", nbTasks, \" tasksLists:\"), React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, {\n        style: styles.todoListView\n      }, React.createElement(TouchableOpacity, {\n        style: styles.todoListBtn,\n        onPress: function onPress() {\n          setTaskListId(item.item.id);\n          setTaskListTitle(item.item.title);\n        }\n      }, React.createElement(Text, null, item.item.title)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteTaskListFunction(item.item.id);\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/trash-can-outline.png\"),\n        style: {\n          height: 24,\n          width: 24\n        }\n      })));\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  todoListView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  inputView: {\n    backgroundColor: \"#AEF6C7\",\n    borderRadius: 30,\n    width: \"80%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  todoListBtn: {\n    width: \"85%\",\n    borderRadius: 25,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5B8266\"\n  },\n  goBackButton: {\n    marginTop: 30,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","createTaskList","deleteTaskList","TokenContext","UsernameContext","TodoLists","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","nbTasks","setNbTasks","title","setTitle","taskListId","setTaskListId","taskListTitle","setTaskListTitle","then","length","catch","err","message","addTaskList","deleteTaskListFunction","id","styles","goBackButton","require","height","width","container","marginTop","marginBottom","fontSize","fontWeight","inputView","TextInput","item","todoListView","todoListBtn","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","backgroundColor","borderRadius","padding","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {\r\n    View,\r\n    Text,\r\n    FlatList,\r\n    TextInput,\r\n    Button,\r\n    Image,\r\n    TouchableOpacity,\r\n    StyleSheet\r\n} from 'react-native'\r\nimport {getTaskList, createTaskList,deleteTaskList} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport TodoLists from \"../components/TodoLists\";\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    const [nbTasks,setNbTasks] = useState(null)\r\n    const [title,setTitle] = useState(\"\")\r\n    const [taskListId,setTaskListId] = useState(null)\r\n    const [taskListTitle,setTaskListTitle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setNbTasks(data.length)\r\n                setData(data)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[data])\r\n\r\n    const addTaskList = () => {\r\n        createTaskList(token,user,title)\r\n            .then( () => {\r\n                getTaskList(user,token)\r\n                    .then(data => {\r\n                        setNbTasks(data.length)\r\n                        setData(data)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const deleteTaskListFunction = (id) => {\r\n        deleteTaskList(token,id)\r\n            .then(() => {\r\n                getTaskList(user,token)\r\n                    .then(data => {\r\n                        setNbTasks(data.length)\r\n                        setData(data)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n        taskListId != null ? (\r\n            <View>\r\n                <TouchableOpacity\r\n                    style={styles.goBackButton}\r\n                    onPress={() => {\r\n                        setTaskListTitle(null)\r\n                        setTaskListId(null)\r\n                    }}\r\n                >\r\n                    <Image source={require('../assets/back.png')} style={{ height: 30, width: 30 }} />\r\n                </TouchableOpacity>\r\n                <Text>\r\n                    Titre de la tasksliste: {taskListTitle}\r\n                </Text>\r\n                <TodoLists id = {taskListId}/>\r\n            </View>\r\n        ) : (\r\n            erreur != null ? (\r\n                <View style={styles.container}>\r\n                    <Text style={{\r\n                        marginTop: 50,\r\n                        marginBottom:20,\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\"\r\n                    }} >Bienvenue sans la liste des todos</Text>\r\n                    <Text>{erreur}</Text>\r\n                </View>\r\n            ) : (\r\n                <View style={styles.container}>\r\n                    <Text style={{\r\n                        marginTop: 50,\r\n                        marginBottom:20,\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\"\r\n                    }}>Bienvenue dans la liste des todos</Text>\r\n                    <View style={styles.inputView}>\r\n                        <TextInput\r\n                            style={styles.TextInput}\r\n                            onChangeText={setTitle}\r\n                            placeholder='saisir ici une nouvelle tasklist'\r\n                            onSubmitEditing={addTaskList}\r\n                            value={title}\r\n                        />\r\n                    </View>\r\n                    <Text style={{marginBottom: 15}}>Vous possédez {nbTasks} tasksLists:</Text>\r\n                    <FlatList data={data} renderItem={(item) =>\r\n                        <View style={styles.todoListView}>\r\n                            <TouchableOpacity\r\n                                style={styles.todoListBtn}\r\n                                onPress={() => {\r\n                                    setTaskListId(item.item.id)\r\n                                    setTaskListTitle(item.item.title)\r\n                                }}\r\n                            >\r\n                                <Text>\r\n                                    {item.item.title}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={() => deleteTaskListFunction(item.item.id)}>\r\n                                <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n                            </TouchableOpacity>\r\n                        </View>}>\r\n                    </FlatList>\r\n                </View>\r\n            )\r\n        )\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    todoListView :{\r\n        flexDirection:'row',justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom:15,\r\n    },\r\n\r\n    inputView: {\r\n        backgroundColor: \"#AEF6C7\",\r\n        borderRadius: 30,\r\n        width: \"80%\",\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    TextInput: {\r\n        height: 50,\r\n        flex: 1,\r\n        padding: 10,\r\n        width: \"80%\",\r\n        alignItems:\"center\",\r\n    },\r\n\r\n    todoListBtn: {\r\n        width: \"85%\",\r\n        borderRadius: 25,\r\n        height: 35,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#5B8266\",\r\n    },\r\n\r\n    goBackButton:{\r\n        marginTop:30,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}