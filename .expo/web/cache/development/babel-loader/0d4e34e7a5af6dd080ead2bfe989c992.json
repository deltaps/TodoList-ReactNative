{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      username = _useContext2[0],\n      setUsername = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, null, \"Connection\"), React.createElement(Text, null, \"Pseudo:\"), React.createElement(TextInput, {\n    placeholder: \"Pseudo\"\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","TokenContext","UsernameContext","SignInScreen","navigation","username","setUsername","token","setToken"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;AAEA,SAAQC,YAAR,EAAqBC,eAArB;;AAGA,eAAe,SAASC,YAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAClD,oBAAgCJ,UAAU,CAACE,eAAD,CAA1C;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,qBAA0BN,UAAU,CAACC,YAAD,CAApC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,SACI,0CACI,oBAAC,IAAD,qBADJ,EAEI,oBAAC,IAAD,kBAFJ,EAGI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC;AADhB,IAHJ,CADJ;AAUH","sourcesContent":["import React, {useContext} from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport {TextInput} from \"react-native-web\";\r\n\r\nexport default function SignInScreen ({ navigation }) {\r\n    const [username, setUsername] = useContext(UsernameContext)\r\n    const [token, setToken] = useContext(TokenContext)\r\n    return (\r\n        <>\r\n            <Text>Connection</Text>\r\n            <Text>Pseudo:</Text>\r\n            <TextInput\r\n                placeholder=\"Pseudo\"\r\n            />\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}