{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { deleteTaskList, deleteUsers, getTaskList, users } from \"../API/todoAPI\";\nexport default function AdminScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      username = _useContext2[0],\n      setUsername = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      allUsers = _useState2[0],\n      setAllUsers = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nbUsers = _useState4[0],\n      setNbUsers = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      actualUser = _useState6[0],\n      setActualUser = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      todoListUser = _useState8[0],\n      setTodoListUser = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nbTasksUser = _useState10[0],\n      setNbTasksUser = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      taskListIdUser = _useState12[0],\n      setTaskListIdUser = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskListNameUser = _useState14[0],\n      setTaskListNameUser = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      erreur = _useState16[0],\n      setErreur = _useState16[1];\n\n  useEffect(function () {\n    users(username, token).then(function (data) {\n      setAllUsers(data);\n      setNbUsers(data.length);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  var deleteUserFunction = function deleteUserFunction(id) {\n    deleteUsers(id, token).then(function () {\n      users(username, token).then(function (data) {\n        setAllUsers(data);\n        setNbUsers(data.length);\n      });\n    });\n  };\n\n  return actualUser != null ? React.createElement(View, null, React.createElement(Text, null, \"L'utilisateur \", actualUser, \" poss\\xE8de \", nbTasksUser, \" todolists :\"), React.createElement(FlatList, {\n    data: todoListUser,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, null, React.createElement(Button, {\n        title: item.item.title,\n        onPress: function onPress() {\n          setTaskListIdUser(item.item.id);\n          setTaskListNameUser(item.item.title);\n        }\n      }));\n    }\n  })) : React.createElement(View, null, React.createElement(Text, null, \"Bienvenue dans la section admin, ci-dessous dessous ce trouve tous les utilisateur de l'application\"), React.createElement(Text, null, \"Il y a actuellement \", nbUsers, \" utilisateurs inscrit sur l'application\"), React.createElement(FlatList, {\n    data: allUsers,\n    renderItem: function renderItem(user) {\n      return React.createElement(View, null, React.createElement(Text, null, \"Nom de l'utilisateur : \", user.item.username), React.createElement(Button, {\n        title: \"TodoLists de l'utilisateur\",\n        onPress: function onPress() {\n          getTaskList(user.item.username, token).then(function (data) {\n            setNbTasksUser(data.length);\n            setTodoListUser(data);\n          }).catch(function (err) {\n            setErreur(err.message);\n          });\n          setActualUser(user.item.username);\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteUserFunction(user.item.id);\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/trash-can-outline.png\"),\n        style: {\n          height: 24,\n          width: 24\n        }\n      })));\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/AdminScreen.js"],"names":["React","useContext","useEffect","useState","TokenContext","UsernameContext","deleteTaskList","deleteUsers","getTaskList","users","AdminScreen","username","setUsername","token","setToken","allUsers","setAllUsers","nbUsers","setNbUsers","actualUser","setActualUser","todoListUser","setTodoListUser","nbTasksUser","setNbTasksUser","taskListIdUser","setTaskListIdUser","taskListNameUser","setTaskListNameUser","erreur","setErreur","then","data","length","catch","err","message","deleteUserFunction","id","item","title","user","require","height","width"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {View, Text, Button, TouchableOpacity, Image, FlatList} from 'react-native'\r\nimport {TokenContext, UsernameContext} from \"../Context/Context\";\r\nimport {deleteTaskList, deleteUsers, getTaskList, users} from \"../API/todoAPI\";\r\n\r\n\r\nexport default function AdminScreen () {\r\n    const [username, setUsername] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n\r\n    const [allUsers,setAllUsers] = useState(null)\r\n    const [nbUsers,setNbUsers] = useState(0)\r\n    const [actualUser,setActualUser] = useState(null)\r\n\r\n    const [todoListUser,setTodoListUser] = useState(null)\r\n    const [nbTasksUser,setNbTasksUser] = useState(0)\r\n    const [taskListIdUser,setTaskListIdUser] = useState(null)\r\n    const [taskListNameUser,setTaskListNameUser] = useState(null)\r\n    const [erreur,setErreur] = useState(null)\r\n\r\n    useEffect(() => {\r\n        users(username,token)\r\n            .then(data => {\r\n                setAllUsers(data)\r\n                setNbUsers(data.length)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    const deleteUserFunction = (id) => {\r\n        deleteUsers(id,token)\r\n            .then(() => {\r\n                users(username,token)\r\n                    .then(data => {\r\n                        setAllUsers(data)\r\n                        setNbUsers(data.length)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n        actualUser != null ? (\r\n            <View>\r\n                <Text>L'utilisateur {actualUser} possède {nbTasksUser} todolists :</Text>\r\n                <FlatList data={todoListUser} renderItem={(item) =>\r\n                    <View>\r\n                        <Button\r\n                            title={item.item.title}\r\n                            onPress={() => {\r\n                                setTaskListIdUser(item.item.id)\r\n                                setTaskListNameUser(item.item.title)\r\n                            }}\r\n                        />\r\n                    </View>}>\r\n                </FlatList>\r\n            </View>\r\n        ) : (\r\n            <View>\r\n                <Text>Bienvenue dans la section admin, ci-dessous dessous ce trouve tous les utilisateur de l'application</Text>\r\n                <Text>Il y a actuellement {nbUsers} utilisateurs inscrit sur l'application</Text>\r\n                <FlatList data={allUsers} renderItem={(user) =>\r\n                    <View>\r\n                        <Text>Nom de l'utilisateur : {user.item.username}</Text>\r\n                        <Button\r\n                            title=\"TodoLists de l'utilisateur\"\r\n                            onPress={() => {\r\n                                getTaskList(user.item.username,token)\r\n                                    .then(data => {\r\n                                        setNbTasksUser(data.length)\r\n                                        setTodoListUser(data)\r\n                                    })\r\n                                    .catch(err => {\r\n                                        setErreur(err.message)\r\n                                    })\r\n                                //TODO Prendre la liste des todoliste de l'utilisteurs choisie.\r\n                                setActualUser(user.item.username)\r\n                            }}\r\n                        />\r\n                        <TouchableOpacity onPress={() => deleteUserFunction(user.item.id)}>\r\n                            <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n                        </TouchableOpacity>\r\n                    </View>}>\r\n                </FlatList>\r\n            </View>\r\n            )\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}