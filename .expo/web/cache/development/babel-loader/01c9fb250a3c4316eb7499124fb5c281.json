{"ast":null,"code":"var API_URL = 'http://127.0.0.1:4000/';\nvar SIGN_IN = 'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}';\nvar SIGN_UP = 'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}';\nvar TASK_LIST = 'query taskLists($username: String!) {taskLists(where: { owner: { username: $username } }) {id title}}';\nexport function signIn(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_IN,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n\n    return jsonResponse.data.signIn;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function signUp(username, password) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: SIGN_UP,\n      variables: {\n        username: username,\n        password: password\n      }\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (jsonResponse) {\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n\n    return jsonResponse.data.signUp;\n  }).catch(function (error) {\n    throw error;\n  });\n}\nexport function getTaskList(username, token) {\n  return fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': 'Bearer ' + token\n    },\n    body: JSON.stringify({\n      query: TASK_LIST,\n      variables: {\n        username: username\n      }\n    })\n  }).then(function (response) {\n    console.log(\"Response\", response.json());\n    return response.json();\n  }).then(function (jsonResponse) {\n    console.log(\"Json\", jsonResponse);\n\n    if (jsonResponse.errors != null) {\n      throw jsonResponse.errors[0];\n    }\n\n    return jsonResponse.data.taskLists;\n  }).catch(function (error) {\n    throw error;\n  });\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/API/todoAPI.js"],"names":["API_URL","SIGN_IN","SIGN_UP","TASK_LIST","signIn","username","password","fetch","method","headers","body","JSON","stringify","query","variables","then","response","json","jsonResponse","errors","data","catch","error","signUp","getTaskList","token","console","log","taskLists"],"mappings":"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","sourcesContent":["const API_URL = 'http://127.0.0.1:4000/'\r\nconst SIGN_IN =\r\n    'mutation($username:String!, $password:String!){signIn(username:$username, password:$password)}'\r\nconst SIGN_UP =\r\n    'mutation($username:String!, $password:String!){signUp(username:$username, password:$password)}'\r\n\r\nconst TASK_LIST =\r\n    'query taskLists($username: String!) {taskLists(where: { owner: { username: $username } }) {id title}}'\r\n\r\nexport function signIn (username, password) {\r\n    return fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            query: SIGN_IN,\r\n            variables: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        })\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(jsonResponse => {\r\n            if (jsonResponse.errors != null) {\r\n                throw jsonResponse.errors[0]\r\n            }\r\n            return jsonResponse.data.signIn\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}\r\n\r\nexport function signUp (username, password) {\r\n    return fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            query: SIGN_UP,\r\n            variables: {\r\n                username: username,\r\n                password: password\r\n            }\r\n        })\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(jsonResponse => {\r\n            if (jsonResponse.errors != null) {\r\n                throw jsonResponse.errors[0]\r\n            }\r\n            return jsonResponse.data.signUp\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}\r\n\r\nexport function getTaskList (username,token) {\r\n    return fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization' : 'Bearer ' + token\r\n        },\r\n        body: JSON.stringify({\r\n            query: TASK_LIST,\r\n            variables: {\r\n                username: username,\r\n            }\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log(\"Response\", response.json())\r\n            return response.json()\r\n        })\r\n        .then(jsonResponse => {\r\n            console.log(\"Json\",jsonResponse)\r\n            if (jsonResponse.errors != null) {\r\n                throw jsonResponse.errors[0]\r\n            }\r\n            return jsonResponse.data.taskLists\r\n        })\r\n        .catch(error => {\r\n            throw error\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}