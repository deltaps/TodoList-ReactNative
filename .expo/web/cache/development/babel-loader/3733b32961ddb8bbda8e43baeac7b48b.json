{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { RoleContext, TokenContext, UsernameContext } from \"../Context/Context\";\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\nimport HomeScreen from \"../Screen/HomeScreen\";\nimport SignInScreen from \"../Screen/SignInScreen\";\nimport SignOutScreen from \"../Screen/SignOutScreen\";\nimport SignUpScreen from \"../Screen/SignUpScreen\";\nimport AdminScreen from \"../Screen/AdminScreen\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      username = _useContext2[0],\n      setUsername = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      role = _useContext6[0],\n      setRole = _useContext6[1];\n\n  return React.createElement(NavigationContainer, null, token == null ? React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Connexion\",\n    component: SignInScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/connexion.png\"),\n          style: {\n            width: 20,\n            height: 20\n          }\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Inscription\",\n    component: SignUpScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/inscription.png\"),\n          style: {\n            width: 20,\n            height: 20\n          }\n        });\n      }\n    }\n  })) : role == \"admin\" ? React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/home.png\"),\n          style: {\n            width: 20,\n            height: 20\n          }\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"TodoLists\",\n    component: TodoListsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/todolists.png\"),\n          style: {\n            width: 20,\n            height: 20\n          }\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"SignOut\",\n    component: SignOutScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/exit.png\"),\n          style: {\n            width: 17.5,\n            height: 17.5\n          }\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Admin\",\n    component: AdminScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Image, {\n          source: require(\"./../assets/admin.png\"),\n          style: {\n            width: 30,\n            height: 30\n          }\n        });\n      }\n    }\n  })) : React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen\n  }), React.createElement(Tab.Screen, {\n    name: \"TodoLists\",\n    component: TodoListsScreen\n  }), React.createElement(Tab.Screen, {\n    name: \"SignOut\",\n    component: SignOutScreen\n  })));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Navigation/Navigation.js"],"names":["React","useContext","NavigationContainer","createBottomTabNavigator","RoleContext","TokenContext","UsernameContext","TodoListsScreen","HomeScreen","SignInScreen","SignOutScreen","SignUpScreen","AdminScreen","Tab","Navigation","username","setUsername","token","setToken","role","setRole","headerShown","tabBarIcon","require","width","height"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\r\nimport {Image} from 'react-native'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport {RoleContext, TokenContext, UsernameContext} from \"../Context/Context\";\r\n\r\nimport TodoListsScreen from \"../Screen/TodoListsScreen\";\r\nimport HomeScreen from '../Screen/HomeScreen'\r\nimport SignInScreen from '../Screen/SignInScreen'\r\nimport SignOutScreen from '../Screen/SignOutScreen'\r\nimport SignUpScreen from '../Screen/SignUpScreen'\r\nimport AdminScreen from \"../Screen/AdminScreen\";\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function Navigation () {\r\n    const [username, setUsername] = useContext(UsernameContext)\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [role,setRole] = useContext(RoleContext)\r\n    return (\r\n        <NavigationContainer>\r\n            {token == null ? (\r\n                <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n                    <Tab.Screen\r\n                        name='Connexion'\r\n                        component={SignInScreen}\r\n                        options={{\r\n                            tabBarIcon: () => (<Image source={require(\"./../assets/connexion.png\")} style={{width: 20, height: 20}} />)\r\n                        }}\r\n                    />\r\n                    <Tab.Screen\r\n                        name='Inscription'\r\n                        component={SignUpScreen}\r\n                        options={{\r\n                            tabBarIcon: () => (<Image source={require(\"./../assets/inscription.png\")} style={{width: 20, height: 20}} />),\r\n                        }}\r\n                    />\r\n                </Tab.Navigator>\r\n            ) : (\r\n               role == \"admin\" ? (\r\n                   <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n                       <Tab.Screen\r\n                           name='Home'\r\n                           component={HomeScreen}\r\n                           options={{\r\n                               tabBarIcon: () => (<Image source={require(\"./../assets/home.png\")} style={{width: 20, height: 20}} />),\r\n                           }}\r\n                       />\r\n                       <Tab.Screen\r\n                           name='TodoLists'\r\n                           component={TodoListsScreen}\r\n                           options={{\r\n                               tabBarIcon: () => (<Image source={require(\"./../assets/todolists.png\")} style={{width: 20, height: 20}} />),\r\n                           }}\r\n                       />\r\n                       <Tab.Screen\r\n                           name='SignOut'\r\n                           component={SignOutScreen}\r\n                           options={{\r\n                               tabBarIcon: () => (<Image source={require(\"./../assets/exit.png\")} style={{width: 17.5, height: 17.5}} />),\r\n                           }}\r\n                       />\r\n                       <Tab.Screen\r\n                           name='Admin'\r\n                           component={AdminScreen}\r\n                           options={{\r\n                               tabBarIcon: () => (<Image source={require(\"./../assets/admin.png\")} style={{width: 30, height: 30}} />),\r\n                           }}\r\n                       />\r\n                    </Tab.Navigator>\r\n               ) : (\r\n                       <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n                       <Tab.Screen name='Home' component={HomeScreen} />\r\n                       <Tab.Screen name='TodoLists' component={TodoListsScreen} />\r\n                       <Tab.Screen name='SignOut' component={SignOutScreen} />\r\n                       </Tab.Navigator>\r\n                   )\r\n                )}\r\n        </NavigationContainer>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}