{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { getTaskList, signIn } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport ActivityIndicatorViewNativeComponent from \"react-native/Libraries/Components/ActivityIndicator/ActivityIndicatorViewNativeComponent\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setData(data);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  if (erreur != null) {\n    return React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, erreur));\n  } else {\n    return React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, data));\n  }\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","signIn","TokenContext","UsernameContext","ActivityIndicatorViewNativeComponent","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","then","catch","err","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;AAEA,SAAQC,WAAR,EAAqBC,MAArB;AACA,SAAQC,YAAR,EAAqBC,eAArB;AACA,OAAOC,oCAAP,MACS,0FADT;AAGA,eAAe,SAASC,eAAT,GAA0B;AACrC,oBAAuBR,UAAU,CAACM,eAAD,CAAjC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAyBV,UAAU,CAACK,YAAD,CAAnC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAaC,QAAb;;AACA,kBAA2BV,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAAuBZ,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAYC,OAAZ;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,WAAW,CAACM,IAAD,EAAME,KAAN,CAAX,CACKM,IADL,CACU,UAAAF,IAAI,EAAI;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAHL,EAIKG,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVL,MAAAA,SAAS,CAACK,GAAG,CAACC,OAAL,CAAT;AACH,KANL;AAOH,GARQ,EAQP,EARO,CAAT;;AAUA,MAAGP,MAAM,IAAI,IAAb,EAAkB;AACd,WACI,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,QAAOA,MAAP,CAFJ,CADJ;AAMH,GAPD,MAQI;AACA,WACI,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,QAAOE,IAAP,CAFJ,CADJ;AAMH;AACJ","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport {getTaskList, signIn} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport ActivityIndicatorViewNativeComponent\r\n    from \"react-native/Libraries/Components/ActivityIndicator/ActivityIndicatorViewNativeComponent\";\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setData(data)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    if(erreur != null){\r\n        return (\r\n            <View>\r\n                <Text>Bienvenue sans le liste des todos</Text>\r\n                <Text>{erreur}</Text>\r\n            </View>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <View>\r\n                <Text>Bienvenue sans le liste des todos</Text>\r\n                <Text>{data}</Text>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}