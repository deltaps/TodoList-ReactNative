{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getTaskList, getTasks } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nbTasks = _useState6[0],\n      setNbTasks = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      task = _useState8[0],\n      setTask = _useState8[1];\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setNbTasks(data.length);\n      setData(data);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  function getTasks2(id) {\n    getTasks(id, token).then(function (data) {\n      setTask(data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  return erreur != null ? React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, erreur)) : React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, \"Vous poss\\xE9dez \", nbTasks, \" tasksLists\"), React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, null, React.createElement(Text, null, \" Titre de la tasksliste: \", item.item.title), React.createElement(Text, null, \" Id de la tasksliste: \", item.item.id, \" \"), getTasks2(item.item.id), React.createElement(FlatList, {\n        data: task,\n        renderItem: function renderItem(teste) {\n          return React.createElement(View, null, React.createElement(Text, null, teste.item.id), React.createElement(Text, null, teste.item.content), React.createElement(Text, null, teste.item.done));\n        }\n      }));\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","getTasks","TokenContext","UsernameContext","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","nbTasks","setNbTasks","task","setTask","then","length","catch","err","message","getTasks2","id","console","log","item","title","teste","content","done"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;;AAEA,SAAQC,WAAR,EAAqBC,QAArB;AACA,SAAQC,YAAR,EAAqBC,eAArB;AAGA,eAAe,SAASC,eAAT,GAA0B;AACrC,oBAAuBP,UAAU,CAACM,eAAD,CAAjC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAyBT,UAAU,CAACK,YAAD,CAAnC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAaC,QAAb;;AACA,kBAA2BT,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAAuBX,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAYC,OAAZ;;AACA,mBAA6Bb,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAeC,UAAf;;AACA,mBAAuBf,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAYC,OAAZ;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,WAAW,CAACK,IAAD,EAAME,KAAN,CAAX,CACKU,IADL,CACU,UAAAN,IAAI,EAAI;AACVG,MAAAA,UAAU,CAACH,IAAI,CAACO,MAAN,CAAV;AACAN,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAJL,EAKKQ,KALL,CAKW,UAAAC,GAAG,EAAI;AACVV,MAAAA,SAAS,CAACU,GAAG,CAACC,OAAL,CAAT;AACH,KAPL;AAQH,GATQ,EASP,EATO,CAAT;;AAWA,WAASC,SAAT,CAAmBC,EAAnB,EAAsB;AAClBtB,IAAAA,QAAQ,CAACsB,EAAD,EAAIhB,KAAJ,CAAR,CACKU,IADL,CACU,UAAAN,IAAI,EAAI;AACVK,MAAAA,OAAO,CAACL,IAAD,CAAP;AACH,KAHL,EAIKQ,KAJL,CAIW,UAAAC,GAAG,EAAI;AACVI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH,KANL;AAOH;;AACD,SACIX,MAAM,IAAI,IAAV,GACA,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,QAAOA,MAAP,CAFJ,CADA,GAMA,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,6BAAqBI,OAArB,gBAFJ,EAGI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAsB,IAAA,UAAU,EAAE,oBAACe,IAAD;AAAA,aAC9B,oBAAC,IAAD,QACI,oBAAC,IAAD,qCAAgCA,IAAI,CAACA,IAAL,CAAUC,KAA1C,CADJ,EAEI,oBAAC,IAAD,kCAA6BD,IAAI,CAACA,IAAL,CAAUH,EAAvC,MAFJ,EAGKD,SAAS,CAACI,IAAI,CAACA,IAAL,CAAUH,EAAX,CAHd,EAII,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAER,IAAhB;AAAsB,QAAA,UAAU,EAAE,oBAACa,KAAD;AAAA,iBAC9B,oBAAC,IAAD,QACI,oBAAC,IAAD,QAAOA,KAAK,CAACF,IAAN,CAAWH,EAAlB,CADJ,EAEI,oBAAC,IAAD,QAAOK,KAAK,CAACF,IAAN,CAAWG,OAAlB,CAFJ,EAGI,oBAAC,IAAD,QAAOD,KAAK,CAACF,IAAN,CAAWI,IAAlB,CAHJ,CAD8B;AAAA;AAAlC,QAJJ,CAD8B;AAAA;AAAlC,IAHJ,CAPJ;AA6BH","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {View, Text, FlatList} from 'react-native'\r\nimport {getTaskList, getTasks} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\n\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    const [nbTasks,setNbTasks] = useState(null)\r\n    const [task,setTask] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setNbTasks(data.length)\r\n                setData(data)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    function getTasks2(id){\r\n        getTasks(id,token)\r\n            .then(data => {\r\n                setTask(data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        erreur != null ? (\r\n        <View>\r\n            <Text>Bienvenue sans le liste des todos</Text>\r\n            <Text>{erreur}</Text>\r\n        </View>\r\n        ) : (\r\n        <View>\r\n            <Text>Bienvenue sans le liste des todos</Text>\r\n            <Text>Vous possÃ©dez {nbTasks} tasksLists</Text>\r\n            <FlatList data={data} renderItem={(item) =>\r\n                <View>\r\n                    <Text> Titre de la tasksliste: {item.item.title}</Text>\r\n                    <Text> Id de la tasksliste: {item.item.id} </Text>\r\n                    {getTasks2(item.item.id)}\r\n                    <FlatList data={task} renderItem={(teste) =>\r\n                        <View>\r\n                            <Text>{teste.item.id}</Text>\r\n                            <Text>{teste.item.content}</Text>\r\n                            <Text>{teste.item.done}</Text>\r\n                        </View>\r\n                    }>\r\n                    </FlatList>\r\n                </View>}>\r\n            </FlatList>\r\n        </View>\r\n        )\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}