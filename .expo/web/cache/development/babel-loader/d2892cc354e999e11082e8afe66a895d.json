{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function TodoItem(props) {\n  var _useState = useState(props.item.done),\n      _useState2 = _slicedToArray(_useState, 2),\n      done = _useState2[0],\n      setDone = _useState2[1];\n\n  var changeDone = function changeDone(state) {\n    setDone(state);\n    props.onPressed();\n  };\n\n  useEffect(function () {\n    changeDone(props.item.done);\n  }, [props.item.done]);\n\n  if (props.beDone) {\n    return React.createElement(View, {\n      style: styles.content\n    }, done ? React.createElement(Switch, {\n      value: done,\n      onValueChange: function onValueChange(state) {\n        setDone(state);\n        props.onPressed(done ? -1 : 1);\n      }\n    }) : null, done ? React.createElement(Text, {\n      style: [styles.text_item, {\n        textDecorationLine: done ? 'line-through' : 'none'\n      }]\n    }, props.item.content) : null, done ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.deleteTodo(props.item.id);\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/trash-can-outline.png\"),\n      style: {\n        height: 24,\n        width: 24\n      }\n    })) : null);\n  } else if (props.beNotDone) {\n    return React.createElement(View, {\n      style: styles.content\n    }, !done ? React.createElement(Switch, {\n      value: done,\n      onValueChange: function onValueChange(state) {\n        setDone(state);\n        props.onPressed(done ? -1 : 1);\n      }\n    }) : null, !done ? React.createElement(Text, {\n      style: [styles.text_item, {\n        textDecorationLine: done ? 'line-through' : 'none'\n      }]\n    }, props.item.content) : null, !done ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.deleteTodo(props.item.id);\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/trash-can-outline.png\"),\n      style: {\n        height: 24,\n        width: 24\n      }\n    })) : null);\n  } else {\n    return React.createElement(View, {\n      style: styles.content\n    }, React.createElement(Switch, {\n      value: done,\n      onValueChange: function onValueChange(state) {\n        setDone(state);\n        props.onPressed(done ? -1 : 1);\n      }\n    }), React.createElement(Text, {\n      style: [styles.text_item, {\n        textDecorationLine: done ? 'line-through' : 'none'\n      }]\n    }, props.item.content), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.deleteTodo(props.item.id);\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/trash-can-outline.png\"),\n      style: {\n        height: 24,\n        width: 24\n      }\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row'\n  },\n  text_item: {\n    marginLeft: 10,\n    width: 150\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/components/TodoItem.js"],"names":["React","useEffect","useState","TodoItem","props","item","done","setDone","changeDone","state","onPressed","beDone","styles","content","text_item","textDecorationLine","deleteTodo","id","require","height","width","beNotDone","StyleSheet","create","flexDirection","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Image, View, Text, StyleSheet, Switch, TouchableOpacity } from 'react-native';\n\nexport default function TodoItem(props) {\n    //console.log(props.item);\n    // Pour être remis a jour, on vas utiliser useEffects\n\n    const [done, setDone] = useState(props.item.done);\n\n    const changeDone = (state) => {\n        setDone(state)\n        props.onPressed()\n    }\n\n    useEffect(() => {\n        changeDone(props.item.done)\n    }, [props.item.done])\n\n    if(props.beDone){ // Autre manière, mettre deux liste dans le père\n        return (\n            <View style={styles.content}>\n                {done ? (<Switch value={done} onValueChange={(state) => {setDone(state);props.onPressed(done ? -1 : 1)}} />) : null}\n                {done ? (<Text style={[styles.text_item, { textDecorationLine: done ? 'line-through' : 'none' }]}>{props.item.content}</Text>) : null}\n                {done ? (<TouchableOpacity onPress={() => props.deleteTodo(props.item.id)}>\n                    <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\n                </TouchableOpacity>) : null}\n\n            </View>\n        )\n    }\n    else if(props.beNotDone){\n        return (\n            <View style={styles.content}>\n                {!done ? (<Switch value={done} onValueChange={(state) => {setDone(state);props.onPressed(done ? -1 : 1)}} />) : null}\n                {!done ? (<Text style={[styles.text_item, { textDecorationLine: done ? 'line-through' : 'none' }]}>{props.item.content}</Text>) : null}\n                {!done ? (<TouchableOpacity onPress={() => props.deleteTodo(props.item.id)}>\n                    <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\n                </TouchableOpacity>) : null}\n\n            </View>\n        )\n    }\n    else{\n       return (\n           <View style={styles.content}>\n               <Switch value={done} onValueChange={(state) => {setDone(state);props.onPressed(done ? -1 : 1)}} />\n               <Text style={[styles.text_item, { textDecorationLine: done ? 'line-through' : 'none' }]}>{props.item.content}</Text>\n               <TouchableOpacity onPress={() => props.deleteTodo(props.item.id)}>\n                   <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\n               </TouchableOpacity>\n\n           </View>\n       )\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    content: {\n        flexDirection: 'row'\n    },\n    text_item: {\n        marginLeft: 10,\n        width: 150\n    }\n})"]},"metadata":{},"sourceType":"module"}