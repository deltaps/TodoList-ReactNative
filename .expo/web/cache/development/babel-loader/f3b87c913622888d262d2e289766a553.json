{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport { deleteTaskList, deleteUsers, getTaskList, users } from \"../API/todoAPI\";\nimport TodoLists from \"../components/TodoLists\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nexport default function AdminScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      username = _useContext2[0],\n      setUsername = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      allUsers = _useState2[0],\n      setAllUsers = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nbUsers = _useState4[0],\n      setNbUsers = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      actualUser = _useState6[0],\n      setActualUser = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      idUser = _useState8[0],\n      setIdUser = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      todoListUser = _useState10[0],\n      setTodoListUser = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nbTasksUser = _useState12[0],\n      setNbTasksUser = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskListIdUser = _useState14[0],\n      setTaskListIdUser = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      taskListNameUser = _useState16[0],\n      setTaskListNameUser = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      erreur = _useState18[0],\n      setErreur = _useState18[1];\n\n  var _useState19 = useState(true),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isLoading = _useState20[0],\n      setIsLoading = _useState20[1];\n\n  useEffect(function () {\n    users(username, token).then(function (data) {\n      setAllUsers(data);\n      setNbUsers(data.length);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  var deleteUserFunction = function deleteUserFunction(id) {\n    deleteUsers(id, token).then(function () {\n      users(username, token).then(function (data) {\n        setAllUsers(data);\n        setNbUsers(data.length);\n        setIsLoading(false);\n      });\n    });\n  };\n\n  var deleteTaskListFunction = function deleteTaskListFunction(id) {\n    deleteTaskList(token, id).then(function () {\n      getTaskList(actualUser, token).then(function (data) {\n        setNbTasksUser(data.length);\n        setTodoListUser(data);\n        setIsLoading(false);\n      });\n    });\n  };\n\n  return taskListIdUser != null ? React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: styles.goBackButton,\n    onPress: function onPress() {\n      setTaskListNameUser(null);\n      setTaskListIdUser(null);\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back.png\"),\n    style: {\n      height: 35,\n      width: 35\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      marginTop: 40,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Utilisateur \", actualUser), React.createElement(TodoLists, {\n    id: taskListIdUser,\n    title: taskListNameUser,\n    idUser: idUser\n  })) : actualUser != null ? isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#5B8266\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    style: styles.goBackButton,\n    onPress: function onPress() {\n      setActualUser(null);\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back.png\"),\n    style: {\n      height: 35,\n      width: 35\n    }\n  })), React.createElement(Text, {\n    style: {\n      marginTop: 90,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    }\n  }, \"L'utilisateur \", actualUser, \" poss\\xE8de \", nbTasksUser, \" todolists :\"), React.createElement(FlatList, {\n    data: todoListUser,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, {\n        style: styles.generalListView\n      }, React.createElement(TouchableOpacity, {\n        style: styles.generalBtn,\n        onPress: function onPress() {\n          setTaskListIdUser(item.item.id);\n          setTaskListNameUser(item.item.title);\n        }\n      }, React.createElement(Text, null, item.item.title)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteTaskListFunction(item.item.id);\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/trash-can-outline.png\"),\n        style: {\n          height: 24,\n          width: 24\n        }\n      })));\n    }\n  })) : isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#5B8266\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Bienvenue dans la section admin\"), React.createElement(Text, {\n    style: {\n      marginBottom: 20\n    }\n  }, \"Il y a actuellement \", nbUsers, \" utilisateurs inscrit sur l'application\"), React.createElement(FlatList, {\n    data: allUsers,\n    renderItem: function renderItem(user) {\n      return React.createElement(View, null, React.createElement(Text, {\n        style: {\n          marginBottom: 10\n        }\n      }, \"Nom de l'utilisateur : \", user.item.username), React.createElement(View, {\n        style: styles.generalListView\n      }, React.createElement(TouchableOpacity, {\n        style: styles.generalBtn,\n        onPress: function onPress() {\n          setIsLoading(true);\n          getTaskList(user.item.username, token).then(function (data) {\n            setIdUser(user.item.id);\n            setNbTasksUser(data.length);\n            setIsLoading(false);\n            setTodoListUser(data);\n          }).catch(function (err) {\n            setErreur(err.message);\n          });\n          setActualUser(user.item.username);\n        }\n      }, React.createElement(Text, null, \"TodoLists de \", user.item.username)), isLoading ? React.createElement(ActivityIndicator, {\n        size: \"small\",\n        color: \"#5B8266\"\n      }) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setIsLoading(true);\n          deleteUserFunction(user.item.id);\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/trash-can-outline.png\"),\n        style: {\n          height: 24,\n          width: 24\n        }\n      }))));\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  generalListView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  generalBtn: {\n    width: \"85%\",\n    borderRadius: 25,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5B8266\"\n  },\n  goBackButton: {\n    marginTop: 30,\n    position: 'absolute',\n    top: 5,\n    left: 5,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/AdminScreen.js"],"names":["React","useContext","useEffect","useState","TokenContext","UsernameContext","deleteTaskList","deleteUsers","getTaskList","users","TodoLists","AdminScreen","username","setUsername","token","setToken","allUsers","setAllUsers","nbUsers","setNbUsers","actualUser","setActualUser","idUser","setIdUser","todoListUser","setTodoListUser","nbTasksUser","setNbTasksUser","taskListIdUser","setTaskListIdUser","taskListNameUser","setTaskListNameUser","erreur","setErreur","isLoading","setIsLoading","then","data","length","catch","err","message","deleteUserFunction","id","deleteTaskListFunction","styles","container","goBackButton","require","height","width","textAlign","marginTop","fontSize","fontWeight","justifyContent","alignItems","flex","marginBottom","item","generalListView","generalBtn","title","user","StyleSheet","create","flexDirection","borderRadius","backgroundColor","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {View, Text, Button, TouchableOpacity, Image, FlatList, StyleSheet, ActivityIndicator} from 'react-native'\r\nimport {TokenContext, UsernameContext} from \"../Context/Context\";\r\nimport {deleteTaskList, deleteUsers, getTaskList, users} from \"../API/todoAPI\";\r\nimport TodoLists from \"../components/TodoLists\";\r\nimport {Touchable} from \"react-native-web\";\r\n//TODO pouvoir changer le slider pour tout les utilisateurs (tous marche sinon)\r\n\r\nexport default function AdminScreen () {\r\n    const [username, setUsername] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n\r\n    const [allUsers,setAllUsers] = useState(null)\r\n    const [nbUsers,setNbUsers] = useState(0)\r\n    const [actualUser,setActualUser] = useState(null)\r\n    const [idUser,setIdUser] = useState(null)\r\n\r\n    const [todoListUser,setTodoListUser] = useState(null)\r\n    const [nbTasksUser,setNbTasksUser] = useState(0)\r\n    const [taskListIdUser,setTaskListIdUser] = useState(null)\r\n    const [taskListNameUser,setTaskListNameUser] = useState(null)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [isLoading,setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        users(username,token)\r\n            .then(data => {\r\n                setAllUsers(data)\r\n                setNbUsers(data.length)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    const deleteUserFunction = (id) => {\r\n        deleteUsers(id,token)\r\n            .then(() => {\r\n                users(username,token)\r\n                    .then(data => {\r\n                        setAllUsers(data)\r\n                        setNbUsers(data.length)\r\n                        setIsLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const deleteTaskListFunction = (id) => {\r\n        deleteTaskList(token,id)\r\n            .then(() => {\r\n                getTaskList(actualUser,token)\r\n                    .then(data => {\r\n                        setNbTasksUser(data.length)\r\n                        setTodoListUser(data)\r\n                        setIsLoading(false)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n\r\n        taskListIdUser != null ? (\r\n            <View style={styles.container}>\r\n                <TouchableOpacity\r\n                    style={styles.goBackButton}\r\n                    onPress={() => {\r\n                        setTaskListNameUser(null)\r\n                        setTaskListIdUser(null)\r\n                    }}\r\n                >\r\n                    <Image source={require('../assets/back.png')} style={{ height: 35, width: 35 }} />\r\n                </TouchableOpacity>\r\n                <Text style={{\r\n                    textAlign:\"center\",\r\n                    marginTop:40,\r\n                    fontSize: 20,\r\n                    fontWeight: \"bold\"}}>\r\n                    Utilisateur {actualUser}\r\n                </Text>\r\n                <TodoLists id = {taskListIdUser} title = {taskListNameUser} idUser = {idUser}/>\r\n            </View>\r\n        ) : (\r\n            actualUser != null ? (\r\n                isLoading ? (\r\n                    <ActivityIndicator size=\"large\" color=\"#5B8266\" style={{justifyContent: 'center', alignItems: 'center',flex: 1,}}/>\r\n                ) : (\r\n                    <View style={styles.container}>\r\n                        <TouchableOpacity\r\n                            style={styles.goBackButton}\r\n                            onPress={() => {\r\n                                setActualUser(null)\r\n                            }}\r\n                        >\r\n                            <Image source={require('../assets/back.png')} style={{ height: 35, width: 35 }} />\r\n                        </TouchableOpacity>\r\n                        <Text style={{\r\n                            marginTop: 90,\r\n                            marginBottom:20,\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\",\r\n                            textAlign:\"center\",\r\n                        }}>L'utilisateur {actualUser} possède {nbTasksUser} todolists :</Text>\r\n                        <FlatList data={todoListUser} renderItem={(item) =>\r\n                            <View style={styles.generalListView}>\r\n                                <TouchableOpacity\r\n                                    style={styles.generalBtn}\r\n                                    onPress={() => {\r\n                                        setTaskListIdUser(item.item.id)\r\n                                        setTaskListNameUser(item.item.title)\r\n                                    }}\r\n                                >\r\n                                    <Text>{item.item.title}</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity onPress={() => deleteTaskListFunction(item.item.id)}>\r\n                                    <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n                                </TouchableOpacity>\r\n                            </View>}>\r\n                        </FlatList>\r\n                    </View>\r\n                    )\r\n            ) : (\r\n                isLoading ? (\r\n                    <ActivityIndicator size=\"large\" color=\"#5B8266\" style={{justifyContent: 'center', alignItems: 'center',flex: 1,}}/>\r\n                ) : (\r\n                    <View style={styles.container}>\r\n                        <Text style={{\r\n                            marginTop: 50,\r\n                            marginBottom:20,\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\"\r\n                        }}>Bienvenue dans la section admin</Text>\r\n                        <Text style={{marginBottom:20}}>Il y a actuellement {nbUsers} utilisateurs inscrit sur l'application</Text>\r\n                        <FlatList data={allUsers} renderItem={(user) =>\r\n                            <View>\r\n                                <Text style={{marginBottom: 10}}>Nom de l'utilisateur : {user.item.username}</Text>\r\n                                <View style={styles.generalListView}>\r\n                                    <TouchableOpacity\r\n                                        style={styles.generalBtn}\r\n                                        onPress={() => {\r\n                                            setIsLoading(true);\r\n                                            getTaskList(user.item.username,token)\r\n                                                .then(data => {\r\n                                                    setIdUser(user.item.id)\r\n                                                    setNbTasksUser(data.length)\r\n                                                    setIsLoading(false)\r\n                                                    setTodoListUser(data)\r\n                                                })\r\n                                                .catch(err => {\r\n                                                    setErreur(err.message)\r\n                                                })\r\n                                            setActualUser(user.item.username)\r\n                                        }}\r\n                                    >\r\n                                        <Text>TodoLists de {user.item.username}</Text>\r\n                                    </TouchableOpacity>\r\n                                    {isLoading ? (\r\n                                        <ActivityIndicator size=\"small\" color=\"#5B8266\" />\r\n                                    ) : (\r\n                                        <TouchableOpacity onPress={() =>\r\n                                            {\r\n                                                setIsLoading(true)\r\n                                                deleteUserFunction(user.item.id)\r\n                                            }\r\n\r\n                                        }>\r\n                                            <Image source={require('../assets/trash-can-outline.png')} style={{ height: 24, width: 24 }} />\r\n                                        </TouchableOpacity>\r\n                                    )}\r\n\r\n                                </View>\r\n                            </View>}>\r\n                        </FlatList>\r\n                    </View>\r\n                    )\r\n            )\r\n        )\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    generalListView :{\r\n        flexDirection:'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom:15,\r\n    },\r\n\r\n    generalBtn: {\r\n        width: \"85%\",\r\n        borderRadius: 25,\r\n        height: 35,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#5B8266\",\r\n    },\r\n    goBackButton:{\r\n        marginTop:30,\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 5,\r\n        right: 0,\r\n        bottom: 0,\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}