{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { RoleContext, TokenContext, UsernameContext } from \"../Context/Context\";\nimport { checkRole, signUp } from \"../API/todoAPI\";\nexport default function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      role = _useContext6[0],\n      setRole = _useContext6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordCorrect = _useState6[0],\n      setPasswordCorrect = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      erreur = _useState8[0],\n      setErreur = _useState8[1];\n\n  var checkPassword = function checkPassword(pass) {\n    setPasswordCorrect(pass == password);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, null, \"Inscription\"), erreur != null ? React.createElement(Text, null, erreur) : React.createElement(React.Fragment, null), React.createElement(Text, null, \"Pseudo:\"), React.createElement(TextInput, {\n    placeholder: \"Pseudo\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    }\n  }), React.createElement(Text, null, \"Mdp:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"Mdp\",\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"Mdp\",\n    onChangeText: function onChangeText(data) {\n      return checkPassword(data);\n    }\n  }), passwordCorrect ? React.createElement(Button, {\n    title: \"Inscription\",\n    onPress: function onPress() {\n      return signUp(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        checkRole(username, token).then(function (data) {\n          setRole(data[0].role[0]);\n          props.navigate('Home');\n        }).catch(function (error) {\n          setErreur(error);\n        });\n      }).catch(function (err) {\n        setErreur(err.message);\n        console.log(\"Erreur\");\n      });\n    }\n  }) : React.createElement(Button, {\n    title: \"Inscription\",\n    disabled: true,\n    onPress: function onPress() {\n      return signUp(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        checkRole(username, token).then(function (data) {\n          setRole(data[0].roles[0]);\n        }).catch(function (error) {\n          setErreur(error);\n        });\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n        console.log(\"Erreur\");\n      });\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignUpScreen.js"],"names":["React","useContext","useState","RoleContext","TokenContext","UsernameContext","checkRole","signUp","SignUpScreen","navigation","token","setToken","user","setUser","role","setRole","username","setUsername","password","setPassword","passwordCorrect","setPasswordCorrect","erreur","setErreur","checkPassword","pass","flex","justifyContent","alignItems","data","then","props","navigate","catch","error","err","message","console","log","roles"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;;;;;AAEA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,eAAnC;AACA,SAAQC,SAAR,EAAmBC,MAAnB;AAEA,eAAe,SAASC,YAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAClD,oBAA0BR,UAAU,CAACG,YAAD,CAApC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,qBAAuBV,UAAU,CAACI,eAAD,CAAjC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAuBZ,UAAU,CAACE,WAAD,CAAjC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAYC,OAAZ;;AACA,kBAA+Bb,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA+Bf,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA6CjB,QAAQ,CAAC,KAAD,CAArD;AAAA;AAAA,MAAOkB,eAAP;AAAA,MAAuBC,kBAAvB;;AACA,mBAA2BnB,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOoB,MAAP;AAAA,MAAcC,SAAd;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC5BJ,IAAAA,kBAAkB,CAACI,IAAI,IAAIP,QAAT,CAAlB;AACH,GAFD;;AAKA,SACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,cAAc,EAAE,QAFb;AAGHC,MAAAA,UAAU,EAAE;AAHT;AADX,KAOI,oBAAC,IAAD,sBAPJ,EAQKN,MAAM,IAAI,IAAV,GAAkB,oBAAC,IAAD,QAAOA,MAAP,CAAlB,GAA4C,yCARjD,EASI,oBAAC,IAAD,kBATJ,EAUI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,QADhB;AAEI,IAAA,YAAY,EAAE,sBAAAO,IAAI;AAAA,aAAIZ,WAAW,CAACY,IAAD,CAAf;AAAA;AAFtB,IAVJ,EAcI,oBAAC,IAAD,eAdJ,EAeI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE,IADrB;AAEI,IAAA,WAAW,EAAC,KAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIV,WAAW,CAACU,IAAD,CAAf;AAAA;AAHtB,IAfJ,EAoBI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE,IADrB;AAEI,IAAA,WAAW,EAAC,KAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,aAAIL,aAAa,CAACK,IAAD,CAAjB;AAAA;AAHtB,IApBJ,EAyBKT,eAAe,GACZ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMb,MAAM,CAACS,QAAD,EAAWE,QAAX,CAAN,CACVY,IADU,CACL,UAAApB,KAAK,EAAI;AACXC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,OAAO,CAACG,QAAD,CAAP;AACAV,QAAAA,SAAS,CAACU,QAAD,EAAUN,KAAV,CAAT,CACKoB,IADL,CACU,UAACD,IAAD,EAAU;AACZd,UAAAA,OAAO,CAACc,IAAI,CAAC,CAAD,CAAJ,CAAQf,IAAR,CAAa,CAAb,CAAD,CAAP;AACAiB,UAAAA,KAAK,CAACC,QAAN,CAAe,MAAf;AACH,SAJL,EAKKC,KALL,CAKW,UAACC,KAAD,EAAW;AACdX,UAAAA,SAAS,CAACW,KAAD,CAAT;AACH,SAPL;AAQH,OAZU,EAaVD,KAbU,CAaJ,UAAAE,GAAG,EAAI;AACVZ,QAAAA,SAAS,CAACY,GAAG,CAACC,OAAL,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,OAjBU,CAAN;AAAA;AAFb,IADY,GAuBZ,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,OAAO,EAAE;AAAA,aAAM/B,MAAM,CAACS,QAAD,EAAWE,QAAX,CAAN,CACVY,IADU,CACL,UAAApB,KAAK,EAAI;AACXC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,OAAO,CAACG,QAAD,CAAP;AACAV,QAAAA,SAAS,CAACU,QAAD,EAAUN,KAAV,CAAT,CACKoB,IADL,CACU,UAACD,IAAD,EAAU;AACZd,UAAAA,OAAO,CAACc,IAAI,CAAC,CAAD,CAAJ,CAAQU,KAAR,CAAc,CAAd,CAAD,CAAP;AAEH,SAJL,EAKKN,KALL,CAKW,UAACC,KAAD,EAAW;AACdX,UAAAA,SAAS,CAACW,KAAD,CAAT;AACH,SAPL;AAQAH,QAAAA,KAAK,CAACC,QAAN,CAAe,MAAf;AACH,OAbU,EAcVC,KAdU,CAcJ,UAAAE,GAAG,EAAI;AACVZ,QAAAA,SAAS,CAACY,GAAG,CAACC,OAAL,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,OAlBU,CAAN;AAAA;AAHb,IAhDR,CADJ;AA6EH","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {View, Text, Button, TextInput} from 'react-native'\r\nimport {RoleContext, TokenContext, UsernameContext} from \"../Context/Context\";\r\nimport {checkRole, signUp} from \"../API/todoAPI\";\r\n\r\nexport default function SignUpScreen ({ navigation }) {\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [role,setRole] = useContext(RoleContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [passwordCorrect,setPasswordCorrect] = useState(false)\r\n    const [erreur,setErreur] = useState('')\r\n\r\n    const checkPassword = (pass) => {\r\n        setPasswordCorrect(pass == password)\r\n    }\r\n\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}\r\n        >\r\n            <Text>Inscription</Text>\r\n            {erreur != null ? (<Text>{erreur}</Text>) : (<></>)}\r\n            <Text>Pseudo:</Text>\r\n            <TextInput\r\n                placeholder=\"Pseudo\"\r\n                onChangeText={data => setUsername(data)}\r\n            />\r\n            <Text>Mdp:</Text>\r\n            <TextInput\r\n                secureTextEntry={true}\r\n                placeholder=\"Mdp\"\r\n                onChangeText={data => setPassword(data)}\r\n            />\r\n            <TextInput\r\n                secureTextEntry={true}\r\n                placeholder=\"Mdp\"\r\n                onChangeText={data => checkPassword(data)}\r\n            />\r\n            {passwordCorrect ? (\r\n                <Button\r\n                    title=\"Inscription\"\r\n                    onPress={() => signUp(username, password)\r\n                        .then(token => {\r\n                            setToken(token)\r\n                            setUser(username)\r\n                            checkRole(username,token)\r\n                                .then((data) => {\r\n                                    setRole(data[0].role[0])\r\n                                    props.navigate('Home')\r\n                                })\r\n                                .catch((error) => {\r\n                                    setErreur(error)\r\n                                })\r\n                        })\r\n                        .catch(err => {\r\n                            setErreur(err.message)\r\n                            console.log(\"Erreur\")\r\n                            //setError(err.message)\r\n                        })}\r\n                />\r\n            ) : (\r\n                <Button\r\n                    title=\"Inscription\"\r\n                    disabled={true} // \"true\" ne fonctionne pas SUR LE PORTABLE mais seulement sur le pc, pour mettre une valeur a true, il faut bien faire {true}\r\n                    onPress={() => signUp(username, password)\r\n                        .then(token => {\r\n                            setToken(token)\r\n                            setUser(username)\r\n                            checkRole(username,token)\r\n                                .then((data) => {\r\n                                    setRole(data[0].roles[0])\r\n                                    //console.log(data[0].roles[0])\r\n                                })\r\n                                .catch((error) => {\r\n                                    setErreur(error)\r\n                                })\r\n                            props.navigate('Home')\r\n                        })\r\n                        .catch(err => {\r\n                            setErreur(err.message)\r\n                            console.log(\"Erreur\")\r\n                            //setError(err.message)\r\n                        })}\r\n                />\r\n            )}\r\n\r\n\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}