{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getTaskList, createTaskList } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nimport TodoLists from \"./TodoLists\";\nexport default function TodoListsScreen() {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      erreur = _useState2[0],\n      setErreur = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nbTasks = _useState6[0],\n      setNbTasks = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      title = _useState8[0],\n      setTitle = _useState8[1];\n\n  useEffect(function () {\n    getTaskList(user, token).then(function (data) {\n      setNbTasks(data.length);\n      setData(data);\n    }).catch(function (err) {\n      setErreur(err.message);\n    });\n  }, []);\n\n  var addTaskList = function addTaskList() {\n    createTaskList(token, user, title).then(function () {\n      getTaskList(user, token).then(function (data) {\n        setNbTasks(data.length);\n        setData(data);\n      });\n    });\n  };\n\n  return erreur != null ? React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(Text, null, erreur)) : React.createElement(View, null, React.createElement(Text, null, \"Bienvenue sans le liste des todos\"), React.createElement(TextInput, {\n    onChangeText: setTitle,\n    placeholder: \"saisir ici une nouvelle tasklist\",\n    onSubmitEditing: addTaskList,\n    value: title\n  }), React.createElement(Text, null, \"Vous poss\\xE9dez \", nbTasks, \" tasksLists\"), React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, null, React.createElement(Text, null, \" Titre de la tasksliste: \", item.item.title), React.createElement(Text, null, \" Id de la tasksliste: \", item.item.id, \" \"), React.createElement(TodoLists, {\n        id: item.item.id\n      }));\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/TodoListsScreen.js"],"names":["React","useContext","useEffect","useState","getTaskList","createTaskList","TokenContext","UsernameContext","TodoLists","TodoListsScreen","user","setUser","token","setToken","erreur","setErreur","data","setData","nbTasks","setNbTasks","title","setTitle","then","length","catch","err","message","addTaskList","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;;;AAEA,SAAQC,WAAR,EAAqBC,cAArB;AACA,SAAQC,YAAR,EAAqBC,eAArB;AACA,OAAOC,SAAP;AAGA,eAAe,SAASC,eAAT,GAA0B;AACrC,oBAAuBR,UAAU,CAACM,eAAD,CAAjC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAYC,OAAZ;;AACA,qBAAyBV,UAAU,CAACK,YAAD,CAAnC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAaC,QAAb;;AACA,kBAA2BV,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAcC,SAAd;;AACA,mBAAuBZ,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAYC,OAAZ;;AACA,mBAA6Bd,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAeC,UAAf;;AACA,mBAAyBhB,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOiB,KAAP;AAAA,MAAaC,QAAb;;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,WAAW,CAACM,IAAD,EAAME,KAAN,CAAX,CACKU,IADL,CACU,UAAAN,IAAI,EAAI;AACVG,MAAAA,UAAU,CAACH,IAAI,CAACO,MAAN,CAAV;AACAN,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAJL,EAKKQ,KALL,CAKW,UAAAC,GAAG,EAAI;AACVV,MAAAA,SAAS,CAACU,GAAG,CAACC,OAAL,CAAT;AACH,KAPL;AAQH,GATQ,EASP,EATO,CAAT;;AAWA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBtB,IAAAA,cAAc,CAACO,KAAD,EAAOF,IAAP,EAAYU,KAAZ,CAAd,CACKE,IADL,CACW,YAAM;AACTlB,MAAAA,WAAW,CAACM,IAAD,EAAME,KAAN,CAAX,CACKU,IADL,CACU,UAAAN,IAAI,EAAI;AACVG,QAAAA,UAAU,CAACH,IAAI,CAACO,MAAN,CAAV;AACAN,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAJL;AAKH,KAPL;AAQH,GATD;;AAWA,SACIF,MAAM,IAAI,IAAV,GACA,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,IAAD,QAAOA,MAAP,CAFJ,CADA,GAMA,oBAAC,IAAD,QACI,oBAAC,IAAD,4CADJ,EAEI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAEO,QADlB;AAEI,IAAA,WAAW,EAAC,kCAFhB;AAGI,IAAA,eAAe,EAAEM,WAHrB;AAII,IAAA,KAAK,EAAEP;AAJX,IAFJ,EAQI,oBAAC,IAAD,6BAAqBF,OAArB,gBARJ,EASI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAsB,IAAA,UAAU,EAAE,oBAACY,IAAD;AAAA,aAC9B,oBAAC,IAAD,QACI,oBAAC,IAAD,qCAAgCA,IAAI,CAACA,IAAL,CAAUR,KAA1C,CADJ,EAEI,oBAAC,IAAD,kCAA6BQ,IAAI,CAACA,IAAL,CAAUC,EAAvC,MAFJ,EAGI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAID,IAAI,CAACA,IAAL,CAAUC;AAA3B,QAHJ,CAD8B;AAAA;AAAlC,IATJ,CAPJ;AA4BH","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {View, Text, FlatList, TextInput} from 'react-native'\r\nimport {getTaskList, createTaskList} from \"../API/todoAPI\";\r\nimport {TokenContext,UsernameContext} from \"../Context/Context\";\r\nimport TodoLists from \"./TodoLists\";\r\n//TODO mieux afficher les listes de todo\r\n\r\nexport default function TodoListsScreen(){\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [token,setToken] = useContext(TokenContext)\r\n    const [erreur,setErreur] = useState(null)\r\n    const [data,setData] = useState(null)\r\n    const [nbTasks,setNbTasks] = useState(null)\r\n    const [title,setTitle] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        getTaskList(user,token)\r\n            .then(data => {\r\n                setNbTasks(data.length)\r\n                setData(data)\r\n            })\r\n            .catch(err => {\r\n                setErreur(err.message)\r\n            })\r\n    },[])\r\n\r\n    const addTaskList = () => {\r\n        createTaskList(token,user,title)\r\n            .then( () => {\r\n                getTaskList(user,token)\r\n                    .then(data => {\r\n                        setNbTasks(data.length)\r\n                        setData(data)\r\n                    })\r\n            })\r\n    }\r\n\r\n    return (\r\n        erreur != null ? (\r\n        <View>\r\n            <Text>Bienvenue sans le liste des todos</Text>\r\n            <Text>{erreur}</Text>\r\n        </View>\r\n        ) : (\r\n        <View>\r\n            <Text>Bienvenue sans le liste des todos</Text>\r\n            <TextInput\r\n                onChangeText={setTitle}\r\n                placeholder='saisir ici une nouvelle tasklist'\r\n                onSubmitEditing={addTaskList}\r\n                value={title}\r\n            />\r\n            <Text>Vous poss√©dez {nbTasks} tasksLists</Text>\r\n            <FlatList data={data} renderItem={(item) =>\r\n                <View>\r\n                    <Text> Titre de la tasksliste: {item.item.title}</Text>\r\n                    <Text> Id de la tasksliste: {item.item.id} </Text>\r\n                    <TodoLists id = {item.item.id}/>\r\n\r\n                </View>}>\r\n            </FlatList>\r\n        </View>\r\n        )\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}