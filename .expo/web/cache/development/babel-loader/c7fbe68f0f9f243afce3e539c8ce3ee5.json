{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TokenContext, UsernameContext, RoleContext } from \"../Context/Context\";\nimport { checkRole, signIn } from \"../API/todoAPI\";\nimport { Link } from \"@react-navigation/native\";\nexport default function SignInScreen() {\n  var _useContext = useContext(TokenContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      token = _useContext2[0],\n      setToken = _useContext2[1];\n\n  var _useContext3 = useContext(UsernameContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      user = _useContext4[0],\n      setUser = _useContext4[1];\n\n  var _useContext5 = useContext(RoleContext),\n      _useContext6 = _slicedToArray(_useContext5, 2),\n      role = _useContext6[0],\n      setRole = _useContext6[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      erreur = _useState6[0],\n      setErreur = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 60,\n      fontSize: 40,\n      fontWeight: \"bold\"\n    }\n  }, \"TodoList\"), React.createElement(Text, {\n    style: {\n      marginBottom: 10,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Connexion\"), erreur != null ? React.createElement(Text, {\n    style: {\n      color: \"red\",\n      marginBottom: 10\n    }\n  }, erreur) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Identifiant\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(data) {\n      return setUsername(data);\n    }\n  })), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: styles.TextInput,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(data) {\n      return setPassword(data);\n    },\n    placeholder: \"Mot de passe\",\n    placeholderTextColor: \"#003f5c\"\n  })), isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#5B8266\",\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    }\n  }) : React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      setIsLoading(true);\n      signIn(username, password).then(function (token) {\n        setToken(token);\n        setUser(username);\n        setIsLoading(false);\n        checkRole(username, token).then(function (data) {\n          setRole(data[0].roles[0]);\n        }).catch(function (error) {\n          setErreur(error);\n        });\n        props.navigate('Home');\n      }).catch(function (err) {\n        setErreur(err.message);\n      });\n    }\n  }, React.createElement(Text, null, \"Connexion\")), React.createElement(Text, null, \"Pas encore de compte?\", ' ', React.createElement(Link, {\n    style: {\n      textDecorationLine: 'underline',\n      color: '#294936',\n      fontWeight: \"bold\"\n    },\n    to: {\n      screen: 'Inscription'\n    }\n  }, \"Cr\\xE9e en un!\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputView: {\n    backgroundColor: \"#AEF6C7\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  loginBtn: {\n    width: \"80%\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: \"#5B8266\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/Screen/SignInScreen.js"],"names":["React","useContext","useState","TokenContext","UsernameContext","RoleContext","checkRole","signIn","Link","SignInScreen","token","setToken","user","setUser","role","setRole","username","setUsername","password","setPassword","erreur","setErreur","isLoading","setIsLoading","styles","container","marginBottom","fontSize","fontWeight","color","inputView","TextInput","data","justifyContent","alignItems","flex","loginBtn","then","roles","catch","error","props","navigate","err","message","textDecorationLine","screen","StyleSheet","create","backgroundColor","borderRadius","width","height","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport {Text, Button, TextInput, View, StyleSheet, TouchableOpacity, ActivityIndicator} from 'react-native'\r\nimport {TokenContext, UsernameContext,RoleContext} from \"../Context/Context\";\r\nimport {checkRole, signIn} from \"../API/todoAPI\";\r\nimport {Link} from \"@react-navigation/native\";\r\n\r\nexport default function SignInScreen () {\r\n    const [token, setToken] = useContext(TokenContext)\r\n    const [user,setUser] = useContext(UsernameContext)\r\n    const [role,setRole] = useContext(RoleContext)\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [erreur,setErreur] = useState(null)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n\r\n    return( <View style={styles.container}>\r\n        <Text\r\n            style={{\r\n                marginBottom:60,\r\n                fontSize: 40,\r\n                fontWeight: \"bold\"\r\n            }}\r\n        >\r\n            TodoList\r\n        </Text>\r\n        <Text\r\n            style={{\r\n                marginBottom:10,\r\n                fontSize: 20,\r\n                fontWeight: \"bold\"\r\n            }}\r\n        >\r\n            Connexion\r\n        </Text>\r\n        {erreur != null ? <Text style={{color:\"red\",marginBottom:10}}>{erreur}</Text> : <></>}\r\n\r\n        <View style={styles.inputView}>\r\n            <TextInput\r\n                style={styles.TextInput}\r\n                placeholder=\"Identifiant\"\r\n                placeholderTextColor=\"#003f5c\"\r\n                onChangeText={data => setUsername(data)}\r\n            />\r\n        </View>\r\n\r\n        <View style={styles.inputView}>\r\n            <TextInput\r\n                style={styles.TextInput}\r\n                secureTextEntry={true}\r\n                onChangeText={data => setPassword(data)}\r\n                placeholder=\"Mot de passe\"\r\n                placeholderTextColor=\"#003f5c\"\r\n            />\r\n        </View>\r\n        {isLoading ? (\r\n            <ActivityIndicator size=\"large\" color=\"#5B8266\" style={{justifyContent: 'center', alignItems: 'center',flex: 1,}}/>\r\n        ) : (\r\n            <TouchableOpacity\r\n                style={styles.loginBtn}\r\n                onPress={() =>\r\n                {\r\n                    setIsLoading(true)\r\n                    signIn(username, password)\r\n                        .then(token => {\r\n                            setToken(token)\r\n                            setUser(username)\r\n                            setIsLoading(false)\r\n                            checkRole(username,token)\r\n                                .then((data) => {\r\n                                    setRole(data[0].roles[0])\r\n                                })\r\n                                .catch((error) => {\r\n                                    setErreur(error)\r\n                                })\r\n                            props.navigate('Home')\r\n                        })\r\n                        .catch(err => {\r\n                            setErreur(err.message)\r\n                        })}\r\n                }\r\n\r\n            >\r\n                <Text>Connexion</Text>\r\n            </TouchableOpacity>\r\n        )}\r\n        <Text>\r\n            Pas encore de compte?{' '}\r\n            <Link\r\n                style={{\r\n                    textDecorationLine: 'underline',\r\n                    color:'#294936',\r\n                    fontWeight: \"bold\"\r\n\r\n            }}\r\n                to={{ screen: 'Inscription' }}\r\n            >\r\n                Crée en un!\r\n            </Link>\r\n        </Text>\r\n    </View>)\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    inputView: {\r\n        backgroundColor: \"#AEF6C7\",\r\n        borderRadius: 30,\r\n        width: \"70%\",\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    TextInput: {\r\n        height: 50,\r\n        flex: 1,\r\n        padding: 10,\r\n        width: \"80%\",\r\n        alignItems:\"center\",\r\n    },\r\n\r\n    loginBtn: {\r\n        width: \"80%\",\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 40,\r\n        backgroundColor: \"#5B8266\",\r\n        marginBottom:10\r\n    },\r\n});\r\n/*\r\n<Button\r\n            title=\"Connexion\"\r\n            style={styles.loginButton}\r\n            onPress={() => signIn(username, password)\r\n                .then(token => {\r\n                    setToken(token)\r\n                    setUser(username)\r\n                    checkRole(username,token)\r\n                        .then((data) => {\r\n                            setRole(data[0].roles[0])\r\n                        })\r\n                        .catch((error) => {\r\n                            setErreur(error)\r\n                        })\r\n                    props.navigate('Home')\r\n                })\r\n                .catch(err => {\r\n                    setErreur(err.message)\r\n                })}\r\n        />\r\n */\r\n\r\n"]},"metadata":{},"sourceType":"module"}