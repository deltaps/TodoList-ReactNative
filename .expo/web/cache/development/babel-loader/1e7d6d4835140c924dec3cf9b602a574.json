{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TodoItem from \"./TodoItem\";\nimport { getTasks, createTask, deleteTask, updateTaskList } from \"../API/todoAPI\";\nimport { TokenContext, UsernameContext } from \"../Context/Context\";\nexport default function TodoLists(props) {\n  var _useContext = useContext(UsernameContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useContext3 = useContext(TokenContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      token = _useContext4[0],\n      setToken = _useContext4[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todos = _useState4[0],\n      setTodos = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newTodoText = _useState6[0],\n      setNewTodoText = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      shouldShow = _useState8[0],\n      setShouldShow = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shouldDone = _useState10[0],\n      setShouldDone = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shouldNotDone = _useState12[0],\n      setShouldNotDone = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      erreur = _useState14[0],\n      setErreur = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isLoading = _useState16[0],\n      setIsLoading = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      inputIsLoading = _useState18[0],\n      setInputIsLoading = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      progress = _useState20[0],\n      setProgress = _useState20[1];\n\n  useEffect(function () {\n    getTasks(props.id, token).then(function (data) {\n      setCount(data.filter(function (item) {\n        return item.done;\n      }).length), setIsLoading(false);\n      setTodos(data);\n      setProgress(todos.length / count);\n    }).catch(function (err) {\n      setErreur(err);\n    });\n  }, []);\n\n  var onPressed = function onPressed(offset) {\n    getTasks(props.id, token).then(function (data) {\n      setTodos(data);\n      setCount(data.filter(function (item) {\n        return item.done;\n      }).length);\n    }).catch(function (err) {\n      setErreur(err);\n    });\n  };\n\n  var deleteTodo = function deleteTodo(id) {\n    deleteTask(token, id).then(function () {\n      getTasks(props.id, token).then(function (data) {\n        setTodos(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n      });\n    });\n  };\n\n  var addNewTodo = function addNewTodo() {\n    setInputIsLoading(true);\n    createTask(newTodoText, token, props.id).then(function () {\n      getTasks(props.id, token).then(function (data) {\n        setTodos(data);\n        setCount(data.filter(function (item) {\n          return item.done;\n        }).length);\n        setInputIsLoading(false);\n      });\n    });\n  };\n\n  var checkAllFunct = function checkAllFunct() {\n    var newTodos = todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: true\n      };\n    });\n    setTodos(newTodos);\n    setCount(newTodos.length);\n  };\n\n  var checkNone = function checkNone() {\n    setTodos(todos.map(function (item) {\n      return {\n        id: item.id,\n        content: item.content,\n        done: false\n      };\n    }));\n    setCount(0);\n  };\n\n  return React.createElement(View, null, isLoading ? React.createElement(View, {\n    styles: styles.container\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#5B8266\"\n  })) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 50,\n      marginBottom: 20,\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, props.title), React.createElement(Text, null, \"Bar de progression\"), React.createElement(Text, null, todos.length / 1), React.createElement(View, {\n    style: styles.progressBar\n  }, React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: '#8BED4F',\n      width: '50%'\n    }]\n  })), React.createElement(Text, {\n    style: {\n      marginBottom: 20\n    }\n  }, \"Il y a \", count, \" slider cocher\"), shouldShow ? React.createElement(FlatList, {\n    style: {\n      marginTop: 10\n    },\n    data: todos,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TodoItem, {\n        onPressed: onPressed,\n        item: item,\n        deleteTodo: deleteTodo,\n        beDone: shouldDone,\n        beNotDone: shouldNotDone,\n        id: item.id,\n        idUser: props.idUser\n      });\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: [styles.TextInput, {\n      marginLeft: 10\n    }],\n    onChangeText: setNewTodoText,\n    placeholder: \"Saisir ici un nouveau todo\",\n    onSubmitEditing: addNewTodo,\n    value: newTodoText\n  }), inputIsLoading ? React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#5B8266\",\n    style: {\n      marginRight: 10\n    }\n  }) : React.createElement(React.Fragment, null)), React.createElement(TouchableOpacity, {\n    style: shouldShow ? styles.generalBtn : [styles.generalBtn, {\n      backgroundColor: \"grey\"\n    }],\n    onPress: function onPress() {\n      setShouldShow(!shouldShow);\n      setShouldDone(false);\n      setShouldNotDone(false);\n    }\n  }, shouldShow ? React.createElement(Text, null, \"Tout retirer\") : React.createElement(Text, null, \"Tout afficher\")), React.createElement(TouchableOpacity, {\n    style: shouldDone ? [styles.generalBtn, {\n      backgroundColor: \"grey\"\n    }] : styles.generalBtn,\n    onPress: function onPress() {\n      setShouldDone(!shouldDone);\n      setShouldNotDone(false);\n      setShouldShow(true);\n    }\n  }, React.createElement(Text, null, \"Afficher les t\\xE2ches d\\xE9j\\xE0 effectu\\xE9es\")), React.createElement(TouchableOpacity, {\n    style: shouldNotDone ? [styles.generalBtn, {\n      backgroundColor: \"grey\"\n    }] : styles.generalBtn,\n    onPress: function onPress() {\n      setShouldNotDone(!shouldNotDone);\n      setShouldDone(false);\n      setShouldShow(true);\n    }\n  }, React.createElement(Text, null, \"Afficher les t\\xE2ches non effectu\\xE9es\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return checkAllFunct();\n    }\n  }, React.createElement(Text, null, \"Cocher toutes les t\\xE2ches\")), React.createElement(TouchableOpacity, {\n    style: styles.generalBtn,\n    onPress: function onPress() {\n      return checkNone();\n    }\n  }, React.createElement(Text, null, \"D\\xE9cocher toutes les t\\xE2ches\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputView: {\n    flexDirection: 'row',\n    backgroundColor: \"#AEF6C7\",\n    borderRadius: 30,\n    width: 270,\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  generalBtn: {\n    width: 270,\n    borderRadius: 25,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5B8266\",\n    marginBottom: 5\n  },\n  progressBar: {\n    height: 20,\n    flexDirection: \"row\",\n    width: '100%',\n    backgroundColor: 'white',\n    borderColor: '#000',\n    borderWidth: 2,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/sacha/Documents/License-informatique/L3/semestre2/devMobile/TP2/app/components/TodoLists.js"],"names":["React","useContext","useEffect","useState","TodoItem","getTasks","createTask","deleteTask","updateTaskList","TokenContext","UsernameContext","TodoLists","props","user","setUser","token","setToken","count","setCount","todos","setTodos","newTodoText","setNewTodoText","shouldShow","setShouldShow","shouldDone","setShouldDone","shouldNotDone","setShouldNotDone","erreur","setErreur","isLoading","setIsLoading","inputIsLoading","setInputIsLoading","progress","setProgress","id","then","data","filter","item","done","length","catch","err","onPressed","offset","deleteTodo","addNewTodo","checkAllFunct","newTodos","map","content","checkNone","styles","container","marginTop","marginBottom","fontSize","fontWeight","title","progressBar","StyleSheet","absoluteFill","backgroundColor","width","idUser","inputView","TextInput","marginLeft","marginRight","generalBtn","create","flex","justifyContent","alignItems","flexDirection","borderRadius","height","padding","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {\n    View,\n    TextInput,\n    ActivityIndicator,\n    Text,\n    FlatList,\n    StyleSheet,\n    TouchableOpacity,\n    Animated\n} from 'react-native';\nimport TodoItem from './TodoItem';\nimport {getTasks, createTask, deleteTask, updateTaskList} from \"../API/todoAPI\";\nimport {TokenContext, UsernameContext} from \"../Context/Context\";\n\nexport default function TodoLists(props){\n    const [user,setUser] = useContext(UsernameContext)\n    const [token,setToken] = useContext(TokenContext)\n    const [count, setCount] = useState(0);\n    const [todos, setTodos] = useState(null);\n    const [newTodoText, setNewTodoText] = useState(\"\");\n    const [shouldShow, setShouldShow] = useState(true);\n    const [shouldDone, setShouldDone] = useState(false);\n    const [shouldNotDone, setShouldNotDone] = useState(false);\n    const [erreur,setErreur] = useState(null);\n    const [isLoading,setIsLoading] = useState(true);\n    const [inputIsLoading,setInputIsLoading] = useState(false);\n    const [progress,setProgress] = useState(null);\n\n    useEffect(() => {\n        getTasks(props.id,token)\n            .then(data => {\n                setCount(data.filter((item)=>item.done).length),\n                setIsLoading(false)\n                setTodos(data)\n                setProgress(todos.length / count)\n            })\n            .catch(err => {\n                setErreur(err)\n            })\n    },[])\n\n    const onPressed = (offset) => {\n        getTasks(props.id,token)\n            .then(data => {\n                setTodos(data)\n                setCount(data.filter((item)=>item.done).length)\n            })\n            .catch(err => {\n                setErreur(err)\n            })\n    }\n\n    const deleteTodo = (id) => {\n        deleteTask(token,id)\n            .then(() => {\n                getTasks(props.id,token)\n                    .then(data => {\n                        setTodos(data)\n                        setCount(data.filter((item)=>item.done).length)\n                    })\n            })\n\n    }\n\n    const addNewTodo = () => {\n        setInputIsLoading(true)\n        createTask(newTodoText,token,props.id)\n            .then(() => {\n                getTasks(props.id,token)\n                    .then(data => {\n                        setTodos(data)\n                        setCount(data.filter((item)=>item.done).length)\n                        setInputIsLoading(false)\n                    })\n            })\n    }\n\n    const checkAllFunct = () => {\n        const newTodos = todos.map(item => {return {id: item.id, content: item.content, done:true}})\n        setTodos(newTodos)\n        setCount(newTodos.length)\n    }\n\n    const checkNone = () => {\n        setTodos(todos.map(item => {return {id: item.id, content: item.content, done:false}}))\n        setCount(0)\n    }\n\n    return (\n        <View>\n            {isLoading ? (\n                <View styles={styles.container}>\n                    <ActivityIndicator size=\"large\" color=\"#5B8266\" />\n                </View>\n            ) : (\n                <View style={styles.container}>\n                    <Text style={{\n                        marginTop:50,\n                        marginBottom:20,\n                        fontSize: 20,\n                        fontWeight: \"bold\"}}>\n                        {props.title}\n                    </Text>\n                    <Text>Bar de progression</Text>\n                    <Text>{todos.length / 1}</Text>\n                    <View style={styles.progressBar}>\n                        <Animated.View style={[StyleSheet.absoluteFill,{backgroundColor: '#8BED4F', width:'50%'}]}></Animated.View>\n                    </View>\n                    <Text style={{marginBottom:20}}>Il y a {count} slider cocher</Text>\n                    {shouldShow ? (\n                        <FlatList\n                            style={{marginTop:10}}\n                            data={todos}\n                            renderItem={({item}) =>\n                                <TodoItem onPressed = {onPressed} item={item} deleteTodo = {deleteTodo} beDone = {shouldDone} beNotDone = {shouldNotDone} id = {item.id} idUser = {props.idUser}/>\n                            }\n                        />\n                    ) : <></>}\n\n\n                    <View style={styles.inputView}>\n                        <TextInput\n                            style={[styles.TextInput,{marginLeft:10}]}\n                            onChangeText={setNewTodoText}\n                            placeholder='Saisir ici un nouveau todo'\n                            onSubmitEditing={addNewTodo}\n                            value={newTodoText}\n                        />\n                        {inputIsLoading ? (\n                            <ActivityIndicator size=\"small\" color=\"#5B8266\" style={{marginRight:10}} />\n                        ) : (<></>)}\n                    </View>\n\n                    <TouchableOpacity\n                        style={shouldShow ? (styles.generalBtn) : ([styles.generalBtn,{backgroundColor: \"grey\"}])}\n                        onPress={() => {\n                            setShouldShow(!shouldShow)\n                            setShouldDone(false)\n                            setShouldNotDone(false)\n                        }}\n                    >\n                        {shouldShow ? (\n                            <Text>\n                                Tout retirer\n                            </Text>\n                        ) : (\n                            <Text>\n                                Tout afficher\n                            </Text>\n                        )}\n\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={shouldDone ? ([styles.generalBtn,{backgroundColor: \"grey\"}]) : (styles.generalBtn)}\n                        onPress={() => {\n                            setShouldDone(!shouldDone)\n                            setShouldNotDone(false)\n                            setShouldShow(true)\n                        }}\n                    >\n                        <Text>\n                            Afficher les tâches déjà effectuées\n                        </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={shouldNotDone ? ([styles.generalBtn,{backgroundColor: \"grey\"}]) : (styles.generalBtn)}\n                        onPress={() => {\n                            setShouldNotDone(!shouldNotDone)\n                            setShouldDone(false)\n                            setShouldShow(true)\n                        }}\n                    >\n                        <Text>\n                            Afficher les tâches non effectuées\n                        </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.generalBtn}\n                        onPress={() => checkAllFunct()}\n                    >\n                        <Text>\n                            Cocher toutes les tâches\n                        </Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.generalBtn}\n                        onPress={() => checkNone()}\n                    >\n                        <Text>\n                            Décocher toutes les tâches\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n            )}\n\n        </View>\n    )\n\n\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    inputView: {\n        flexDirection: 'row',\n        backgroundColor: \"#AEF6C7\",\n        borderRadius: 30,\n        width: 270,\n        height: 45,\n        marginBottom: 20,\n        alignItems: \"center\",\n    },\n\n    TextInput: {\n        height: 50,\n        flex: 1,\n        padding: 10,\n        width: \"80%\",\n        alignItems:\"center\",\n    },\n\n    generalBtn: {\n        width: 270,\n        borderRadius: 25,\n        height: 35,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#5B8266\",\n        marginBottom:5,\n    },\n    progressBar: {\n        height: 20,\n        flexDirection: \"row\",\n        width: '100%',\n        backgroundColor: 'white',\n        borderColor: '#000',\n        borderWidth: 2,\n        borderRadius: 5\n    }\n});\n"]},"metadata":{},"sourceType":"module"}